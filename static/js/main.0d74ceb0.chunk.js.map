{"version":3,"sources":["MaterialTableIcons.js","App.js","index.js"],"names":["tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","BasicTable","useState","id","Query","BU","parentid","previsu_data","previous_action","data","setData","title","field","editable","cellStyle","textAlign","editComponent","display","value","includes","replace","TextField","fullWidth","multiline","onChange","e","target","lookup","None","Others","FTRTH","PNSHK","WTCHK","WTCID","WTCPH","WWHK","WTCTW","WTCMY","WTCTH","WTCSG","columns","ExportMaster","master_export","template_query","template_json","bu_list_use","bu_lister","temp_no_head","loop_check","other_check","low_bu","push","toUpperCase","temp","skip_firster","substring","temp_sub","bu_name","sub_query","check_check","fileData","JSON","stringify","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","download","href","click","bu_specific","rowData","_data","mum_id","random_id","Math","floor","random","id_list","obj","undefined","temp_str","find","element","data_number","setTimeout","first_set","DrageState","row","dropIndex","reOrderRow","from","to","newtableData","arr","console","log","start","slice","between","end","return_list","reload_data","temp_list","range","Array","length","keys","zip","first","second","min_math","min","new_between","splice","new_return","offsetIndex","first_disable","className","file","files","name","reader","FileReader","onload","jsonObj","parse","result","query_list","temp_que","skip_first","sub_data","clean_list","result_list","split","iter","startsWith","alert","readAsBinaryString","style","width","margin","icons","color","onRowUpdate","newValue","oldValue","Promise","resolve","reject","dataUpdate","row_table","target_id","pass_index","newValue_check","filter","t","onRowDelete","forEach","rd","mum_check","new_data","data_sub","parentChildData","rows","a","options","actionsCellStyle","tableLayout","headerSelectionProps","disabled","headerStyle","position","top","backgroundColor","isLoading","sorting","paging","padding","selection","draggable","selectionProps","rowStyle","tableData","isTreeExpanded","styles","transition","levels","path","localization","header","actions","icon","ArrowBackIcon","iconProps","tooltip","onClick","fontSize","event","index_variable","index_partent","item_key","color_type","childRows","hidden","components","Row","onDoubleClick","onDragStart","onDragEnter","onDragEnd","ReactDOM","render","StrictMode","getElementById"],"mappings":"ygBA0CeA,EArBI,CACjBC,IAAKC,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAYD,GAAZ,IAAmBC,IAAKA,QACxDC,MAAOH,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAWD,GAAX,IAAkBC,IAAKA,QACzDE,MAAOJ,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAWD,GAAX,IAAkBC,IAAKA,QACzDG,OAAQL,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAmBD,GAAnB,IAA0BC,IAAKA,QAClEI,YAAaN,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAkBD,GAAlB,IAAyBC,IAAKA,QACtEK,KAAMP,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAUD,GAAV,IAAiBC,IAAKA,QACvDM,OAAQR,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAaD,GAAb,IAAoBC,IAAKA,QAC5DO,OAAQT,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAgBD,GAAhB,IAAuBC,IAAKA,QAC/DQ,UAAWV,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAeD,GAAf,IAAsBC,IAAKA,QACjES,SAAUX,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAcD,GAAd,IAAqBC,IAAKA,QAC/DU,SAAUZ,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAkBD,GAAlB,IAAyBC,IAAKA,QACnEW,aAAcb,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAiBD,GAAjB,IAAwBC,IAAKA,QACtEY,YAAad,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAWD,GAAX,IAAkBC,IAAKA,QAC/Da,OAAQf,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAYD,GAAZ,IAAmBC,IAAKA,QAC3Dc,UAAWhB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAmBD,GAAnB,IAA0BC,IAAKA,QACrEe,gBAAiBjB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAYD,GAAZ,IAAmBC,IAAKA,QACpEgB,WAAYlB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAgBD,GAAhB,IAAuBC,IAAKA,S,iKC6lCtDiB,GAzlCI,WACnB,MAAkCC,oBAAS,GAA3C,mBAEA,GAFA,UAEsCA,mBAAS,CAC7C,CAAEC,GAAK,EAAEC,MAAO,gBAAgBC,GAAK,GAAGC,SAAS,MACjD,CAAEH,GAAK,EAAEC,MAAO,YAAYC,GAAK,GAAGC,SAAS,MAC7C,CAAEH,GAAK,EAAGC,MAAO,eAAeC,GAAG,SAASC,SAAW,GACvD,CAAEH,GAAK,EAAGC,MAAO,eAAeC,GAAG,QAAQC,SAAW,GACtD,CAAEH,GAAK,EAAGC,MAAO,eAAeC,GAAG,QAAQC,SAAW,GACtD,CAAEH,GAAK,EAAGC,MAAO,kBAAkBC,GAAK,GAAGC,SAAS,MACpD,CAAEH,GAAK,EAAGC,MAAO,MAAMC,GAAK,GAAGC,SAAS,MACxC,CAAEH,GAAK,EAAGC,MAAO,eAAeC,GAAG,QAAQC,SAAW,GACtD,CAAEH,GAAK,EAAGC,MAAO,eAAeC,GAAG,SAASC,SAAW,GACvD,CAAEH,GAAK,EAAGC,MAAO,eAAeC,GAAG,QAAQC,SAAW,MAVxD,mBAcA,GAdA,UAcuCJ,mBAAS,CAC9C,CAAEC,GAAK,EAAEC,MAAO,gBAAgBC,GAAK,GAAGC,SAAS,MACjD,CAAEH,GAAK,EAAEC,MAAO,YAAYC,GAAK,GAAGC,SAAS,MAC7C,CAAEH,GAAK,EAAGC,MAAO,eAAeC,GAAG,SAASC,SAAW,GACvD,CAAEH,GAAK,EAAGC,MAAO,eAAeC,GAAG,QAAQC,SAAW,GACtD,CAAEH,GAAK,EAAGC,MAAO,eAAeC,GAAG,QAAQC,SAAW,GACtD,CAAEH,GAAK,EAAGC,MAAO,kBAAkBC,GAAK,GAAGC,SAAS,MACpD,CAAEH,GAAK,EAAGC,MAAO,MAAMC,GAAK,GAAGC,SAAS,MACxC,CAAEH,GAAK,EAAGC,MAAO,eAAeC,GAAG,QAAQC,SAAW,GACtD,CAAEH,GAAK,EAAGC,MAAO,eAAeC,GAAG,SAASC,SAAW,GACvD,CAAEH,GAAK,EAAGC,MAAO,eAAeC,GAAG,QAAQC,SAAW,MAVxD,mBAAOC,EAAP,KAAoBC,EAApB,KAaA,EAAwBN,mBAAS,CAC/B,CAAEC,GAAK,EAAEC,MAAO,gBAAgBC,GAAK,GAAGC,SAAS,MACjD,CAAEH,GAAK,EAAEC,MAAO,YAAYC,GAAK,GAAGC,SAAS,MAC7C,CAAEH,GAAK,EAAGC,MAAO,eAAeC,GAAG,SAASC,SAAW,GACvD,CAAEH,GAAK,EAAGC,MAAO,eAAeC,GAAG,QAAQC,SAAW,GACtD,CAAEH,GAAK,EAAGC,MAAO,eAAeC,GAAG,QAAQC,SAAW,GACtD,CAAEH,GAAK,EAAGC,MAAO,kBAAkBC,GAAK,GAAGC,SAAS,MACpD,CAAEH,GAAK,EAAGC,MAAO,MAAMC,GAAK,GAAGC,SAAS,MACxC,CAAEH,GAAK,EAAGC,MAAO,eAAeC,GAAG,QAAQC,SAAW,GACtD,CAAEH,GAAK,EAAGC,MAAO,eAAeC,GAAG,SAASC,SAAW,GACvD,CAAEH,GAAK,EAAGC,MAAO,eAAeC,GAAG,QAAQC,SAAW,KAVxD,mBAAOG,EAAP,KAAaC,EAAb,KAcA,EAA8BR,mBAAS,CACrC,CAAES,MAAO,QAASC,MAAO,QAAQC,SAAS,SAAUC,UAAW,CAC7DC,UAAW,UACXC,cAAe,SAAAjC,GACb,IAAIkC,EAAU,GAGd,OAF+BA,EAA3BlC,EAAMmC,MAAMC,SAAS,KAAgBpC,EAAMmC,MAAME,QAAQ,IAAI,IACjDrC,EAAMmC,MAExB,cAACG,GAAA,EAAD,CAEEC,WAAW,EACXC,WAAW,EACXL,MAAOD,EACPO,SAAU,SAAAC,GAAC,OAAI1C,EAAMyC,SAASC,EAAEC,OAAOR,YAM3C,CAAEP,MAAO,KAAMC,MAAO,KACrBG,UAAW,SACZY,OAAQ,CACAC,KAAK,GACLC,OAAO,SACPC,MAAM,QACNC,MAAM,QACNC,MAAM,QACNC,MAAM,QACNC,MAAM,QACNC,KAAK,OACLC,MAAM,QACNC,MAAM,QACNC,MAAM,QACNC,MAAM,YAjChB,mBAAOC,EAAP,KA4KQC,GA5KR,KA4KuB,WACnB,IAAIC,EAAa,YAAOjC,GACpBkC,EAAiB,GACjBC,EAAgB,GAChBC,EAAc,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,OAAO,QAAQ,QAAQ,QAAQ,SACtFC,EAAY,GACZC,EAAe,GACfC,EAAa,UACbC,EAAc,UAElB,IAAK,IAAIC,KAAUL,EACpBC,EAAUK,KAAKN,EAAYK,GAAQE,eAKlC,IAAK,IAAIC,KAAQX,EACoB,MAAhCA,EAAcW,GAAM/C,UACxBqC,EAAeQ,KAAKT,EAAcW,GAAMjD,OAGzC,IAAK,IAAIiD,KAAQX,EAChB,GAA+C,GAA3CA,EAAcW,GAAMjD,MAAMe,SAAS,KACxC,CAAC,IAAImC,EAAeZ,EAAcW,GAAMjD,MAAMmD,UAAU,GAExD,IAAK,IAAIC,KADRZ,EAAcU,GAAgB,GACVZ,EAEfA,EAAcc,GAAUlD,UAAYoC,EAAcW,GAAMlD,IAE1DyC,EAAcU,GAAcH,KAAK,CAAC,GAAKT,EAAcc,GAAUnD,GAC7B,MAAQqC,EAAcc,GAAUpD,QAaxE,IAAK,IAAIqD,KADTb,EAAc,aAAe,GACTE,EAGlB,IAAK,IAAIY,KAFRd,EAAc,aAAaE,EAAUW,IAAY,GAE5Bd,EAGlB,GAFDK,EAAa,UACbC,EAAc,UACkC,GAA3CN,EAAee,GAAWvC,SAAS,KACvC,CACE,IAAK,IAAIwC,KAAef,EADzBG,EAAeJ,EAAee,GAAWH,UAAU,IAE3CX,EAAcG,GAAcY,GAAatD,IAAMyC,EAAUW,KACzDT,EAAaJ,EAAcG,GAAcY,GAAavD,OAEN,UAA/CwC,EAAcG,GAAcY,GAAatD,KAC1C4C,EAAcL,EAAcG,GAAcY,GAAavD,OAG1C,WAAd4C,EACHJ,EAAc,aAAaE,EAAUW,IAAUN,KAAKF,GAEnDL,EAAc,aAAaE,EAAUW,IAAUN,KAAKH,QAItDJ,EAAc,aAAaE,EAAUW,IAAUN,KAAKR,EAAee,IAW7Ed,EAAa,eAAqBD,EAElC,IAAMiB,EAAWC,KAAKC,UAAUlB,GAC1BmB,EAAO,IAAIC,KAAK,CAACJ,GAAW,CAACK,KAAM,eACnCC,EAAMC,IAAIC,gBAAgBL,GAC1BM,EAAOC,SAASC,cAAc,KACpCF,EAAKG,SAAW,cAChBH,EAAKI,KAAOP,EACZG,EAAKK,UAcDC,EAAc,SAAClD,EAAImD,GACrBpE,EAAgB,YAAIC,IAOpB,IANA,IAAIoE,EAAK,YAAOpE,GACZqE,EAASF,EAAQzE,GACjB4E,EAAYC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC5BC,EAAU,GACVC,OAAMC,EACNC,EAAW,QACDD,GAAPD,GACLL,EAAYC,KAAKC,MAAsB,IAAhBD,KAAKE,eAEjBG,IADXD,EAAMD,EAAQI,MAAK,SAAAC,GAAO,OAAIA,GAAWT,QAEvCK,EAAMD,EAAQI,MAAK,SAAAC,GAAO,OAAIA,GAAWT,EAAY,MAKzD,IAAK,IAAIU,KADTZ,EAAM1B,KAAK,CAAEhD,GAAK4E,EAAW3E,MAAO,IAAIC,GAAG,IAAIC,SAAWwE,IAClCD,EACvBS,EAAWT,EAAMY,GAAarF,MACzByE,EAAMY,GAAatF,IAAM2E,EAAoD,GAA1CD,EAAMY,GAAarF,MAAMe,SAAS,OACxE0D,EAAMY,GAAarF,MAAQ,IAAMkF,GAQpCI,YAAW,WACThF,EAAQmE,GACRc,GAAU,KAGT,MAyFDC,EAAa,CACjBC,KAAM,EACNC,WAAY,GAuDRC,EAAa,SAACC,EAAMC,GAKxBzF,EAAgB,YAAIC,IACpB,IAAIoE,EAAQpE,EAGZ,GAA4B,MAAxBoE,EAAMmB,GAAM1F,SAAuC,MAApBuE,EAAMoB,GAAI3F,cACxC,CAAC,KAA2B,MAAxBuE,EAAMmB,GAAM1F,SAAyC,MAAtBuE,EAAMoB,GAAI3F,UAE7C,OADJ,GAAGuE,EAAMmB,GAAM1F,UAAYuE,EAAMoB,GAAI3F,SAAiB,OAGvD,IAAI4F,EAlEc,SAACF,EAAMC,GAAkB,IAAdE,EAAa,uDAAP,GACnC,GAAIH,EAAOC,EAAI,CACbG,QAAQC,IAAI,aACZ,IAAIC,EAAQH,EAAII,MAAM,EAAGP,GACvBQ,EAAUL,EAAII,MAAMP,EAAO,EAAGC,EAAK,GACnCQ,EAAMN,EAAII,MAAMN,EAAK,GAKnBS,EAAW,sBAAQJ,GAAR,YAAkBE,GAAlB,CAA2BL,EAAIH,IAA/B,YAAyCS,IACxD,GAA0B,MAAtBN,EAAIH,GAAM1F,SAAkB,OAAOoG,EAErC,IADG,EACCC,EAAc,GACdC,EAAY,GACZC,EAAK,YAAOC,MAAMN,EAAQO,QAAQC,QAHnC,cAK0BC,eAAIT,EAAUK,IALxC,IAKH,yDAAWK,EAAX,KAAkBC,EAAlB,KACID,EAAM5G,UAAY6F,EAAIH,GAAM7F,KAE9BwG,EAAYxD,KAAKgE,GACjBP,EAAUzD,KAAK+D,KATd,8BAYL,GAA0B,GAAtBP,EAAYI,OACd,OAAOL,EAEPN,QAAQC,IAAIM,GACZ,IAAIS,EAAWpC,KAAKqC,IAAIV,GACpBW,EAAcd,EAAQe,OAAOH,EAASZ,EAAQO,OAAO,GACzDX,QAAQC,IAAIiB,GACZlB,QAAQC,IAAIG,GACZJ,QAAQC,IAAIC,GACZF,QAAQC,IAAIF,EAAMH,IAElB,IAAIwB,EAAU,sBAAOlB,GAAP,YAAiBE,GAAjB,CAA0BL,EAAIH,IAASY,EAAvC,YAAqDH,IAInE,OADAL,QAAQC,IAAImB,GACLA,EAIX,GAAIxB,EAAOC,EAAI,CACb,IAAIK,EAAQH,EAAII,MAAM,EAAGN,GACvBO,EAAUL,EAAII,MAAMN,EAAID,GACxBS,EAAMN,EAAII,MAAMP,EAAO,GAEzB,MAAM,GAAN,mBAAWM,GAAX,CAAkBH,EAAIH,IAAtB,YAAgCQ,GAAhC,YAA4CC,IAE9C,OAAON,EAgBYsB,CAAYzB,EAAMC,EAAIpB,GAIzCnE,EAAQwF,GACRP,GAAU,IAoIZ,EAAkCzF,oBAAS,GAA3C,mBAAOwH,EAAP,KAAqB/B,EAArB,KAoBE,OACE,sBAAKgC,UAAY,UAAjB,UACA,uBAAO1D,KAAM,OAAOzC,SA/IL,SAACC,GAGlB,IAAMmG,EAAOnG,EAAEC,OAAOmG,MAAM,GAC5BzB,QAAQC,IAAIuB,EAAKE,MAUjB,IAAMC,EAAS,IAAIC,WACfJ,EAAKE,KAAK3G,SAAS,SAEvB4G,EAAOE,OAAO,SAACxG,GACb2E,QAAQC,IAAI0B,EAAOD,MACnB,IAAII,EAAUrE,KAAKsE,MAAM1G,EAAEC,OAAO0G,QAE9BC,EAAa,GACjB,IAAK,IAAIC,KAAYJ,EAAQvF,eAC7B,CACE,IAAIoC,EAAYC,KAAKC,MAAsB,IAAhBD,KAAKE,UAChC,GAAsD,GAAlDgD,EAAQvF,eAAe2F,GAAUnH,SAAS,KAC7CkH,EAAWlF,KACV,CAAEhD,GAAK4E,EACL3E,MAAO8H,EAAQvF,eAAe2F,GAC9BjI,GAAK,GACLC,SAAS,WAIb,CAAC,IAAIiI,EAAaL,EAAQvF,eAAe2F,GAAU/E,UAAU,GAO3D,IAAK,IAAIiF,KANTH,EAAWlF,KACT,CAAEhD,GAAK4E,EACL3E,MAAO8H,EAAQvF,eAAe2F,GAC9BjI,GAAK,GACLC,SAAS,OAEQ4H,EAAQK,GAC5BF,EAAWlF,KACV,CACAhD,GAAK4E,EAAYC,KAAKC,MAAsB,IAAhBD,KAAKE,UACjC9E,MAAM8H,EAAQK,GAAYC,GAAUpI,MACpCC,GAAK6H,EAAQK,GAAYC,GAAUnI,GACnCC,SAAWyE,KAQfrE,EAAQ2H,IAGHT,EAAKE,KAAK3G,SAAS,QAE1B4G,EAAOE,OAAO,SAACxG,GACb,IAAIgH,EAAa,GACbC,EAAcjH,EAAEC,OAAO0G,OAAOO,MAAM,SAExC,IAAK,IAAIC,KAAQF,EACjB,CACA,IAAI3D,EAAYC,KAAKC,MAAsB,IAAhBD,KAAKE,UACY,IAAxCwD,EAAYE,GAAMxH,QAAQ,OAAO,KAAkD,GAArCsH,EAAYE,GAAMC,WAAW,OAC9EJ,EAAWtF,KACV,CAAEhD,GAAK4E,EACL3E,MAAOsI,EAAYE,GACnBvI,GAAK,GACLC,SAAS,OAIbI,EAAQ+H,IAKXK,MAAO,uBAEVf,EAAOgB,mBAAmBnB,MA8DxB,cAAC,IAAD,CACAjH,MAAM,gBACNqI,MAAO,CAAEC,MAAO,OAAQC,OAAQ,MAChCC,MAAO,CAAC9J,KAAM,kBAAM,cAAC,KAAD,CAAmB2J,MAAO,CAAEI,MAAO,YAC/CjK,OAAQ,kBAAM,cAAC,KAAD,CAAiC6J,MAAO,CAAEI,MAAO,YAC/DnK,MAAO,kBAAM,cAAC,IAAD,CAAgC+J,MAAS,CAACI,MAAO,QAAQ,cAAe,WACrFlK,MAAO,kBAAM,cAAC,IAAD,CAAoB8J,MAAS,CAACI,MAAO,aAiBxDvI,SAAY,CAACwI,YAAY,SAACC,EAAUC,GAAX,OACvB,IAAIC,SAAQ,SAACC,EAASC,GACpBhE,YAAW,WACTU,QAAQC,IAAI5F,GACZ,IAFe,EAEXkJ,EAAU,YAAOlJ,GACjBmJ,EAAS,YAAOnJ,GAChBoG,EAAK,YAAOC,MAAM8C,EAAU7C,QAAQC,QACpC6C,EAAYP,EAASnJ,GACrB2J,EAAa,GACbC,EAAiBT,EAPN,cASerC,eAAI2C,EAAY/C,IAT/B,IASf,yDAAWK,EAAX,KAAmBC,EAAnB,KACE,GAAID,EAAM/G,IAAM0J,EAChB,CAACC,EAAa3C,EACZ,QAZW,8BAeff,QAAQC,IAAIkD,GAEwB,GAAhCA,EAASnJ,MAAMyI,WAAW,MAC7BkB,EAAe3J,MAAQkJ,EAASlJ,MAAMgB,QAAQ,IAAI,IACnD2I,EAAe3J,MAAQ,IAAM2J,EAAe3J,OAE3C2J,EAAe3J,MAAQkJ,EAASlJ,MAAMgB,QAAQ,IAAI,KAYjDuI,EAAaA,EAAWK,QAAO,SAAAC,GAAC,OAAIA,EAAE9J,KAAOmJ,EAASnJ,OAC3CoH,OAAOuC,EAAW,EAAEC,GAKjCvJ,EAAgB,YAAIC,IACpBC,EAAQiJ,GACRhE,GAAU,GACV8D,MACC,SAIPS,YAAY,SAACZ,EAAS1E,GAAV,OACR,IAAI4E,SAAQ,SAACC,EAASC,GACpBhE,YAAW,WAGX,IAAId,EAAU,CAAC0E,GACXzE,EAAK,YAAOpE,GAEpBmE,EAAQuF,SAAQ,SAAAC,GACdvF,EAAQA,EAAMmF,QAAO,SAAAC,GAAC,OAAIA,EAAE9J,KAAOiK,EAAGjK,SAExC,IAAIkK,EAAS,YAAOxF,GAGpBD,EAAQuF,SAAQ,SAAAC,GACdC,EAAYA,EAAUL,QAAO,SAAAC,GAAC,OAAIA,EAAE3J,UAAY8J,EAAG9J,eAErD8F,QAAQC,IAAIgE,GACZ,IAAIC,EAAWzF,EAEf,GAA2B,MAAvBD,EAAQ,GAAGtE,SACd,GAAwB,GAApB+J,EAAUtD,OACZ,IAAK,IAAIwD,KAAY1F,EACfD,EAAQ,GAAGtE,UAAYuE,EAAM0F,GAAUpK,IAAM0E,EAAM0F,GAAUnK,MAAMyI,WAAW,OAChFhE,EAAM0F,GAAUnK,MAAQyE,EAAM0F,GAAUnK,MAAMmD,UAAU,SAM3D6C,QAAQC,IAAI,aAGViE,EAASH,SAAQ,SAAAC,GACrBvF,EAAQA,EAAMmF,QAAO,SAAAC,GAAC,OAAIA,EAAE3J,WAAasE,EAAQ,GAAGzE,SAEtDK,EAAgB,YAAIC,IACpBC,EAAQmE,GACRc,GAAU,GACV8D,MACC,UAULjH,QACEA,EAEF/B,KAAMA,EACN+J,gBAAiB,SAAC3E,EAAK4E,GAAN,OAAeA,EAAKlF,MAAK,SAAAmF,GAAC,OAAIA,EAAEvK,IAAM0F,EAAIvF,aAM3DqK,QAAS,CACPC,iBAAkB,CAChBxB,MAAO,SAETyB,YAAa,OACbC,qBAAsB,CACpBC,UAAW,GAIbC,YAAa,CAAEC,SAAU,SAASC,IAAI,EAAGC,gBAAiB,WAC1DC,WAAW,EACXC,SAAU,EAIVC,QAAO,EACPC,QAAQ,QA4BVC,WAAY,EACVC,WAAW,EACXC,eAAgB,SAAA7F,GAAG,MAAK,CACAkF,UAAW,IAO7BY,SAAU,SAAA/G,GAGGA,EAAQgH,UAAUC,eAA7B,IAEIC,EAAS,CAAEC,WAAY,mBACrBC,EAA2C,IAAlCpH,EAAQgH,UAAUK,KAAKlF,OAAe,EAAInC,EAAQgH,UAAUK,KAAKlF,OAMhF,OALA+E,EAAM,2BAAQA,GAAR,IAAgB,gBAAgB,GAAhB,OAA6B,EAATE,EAApB,QAKE,MAApBpH,EAAQtE,SACL,CAGL,cAAe,OACf,YAAa,OACb,cAAc,MAGd6K,gBAAiB,2BAGR,CAAC,YAAa,OAAQ,cAAc,SAqCvDe,aAAc,CACZC,OAAS,CACNC,QAAS,YAuCdA,QAAS,CAEL,CAACC,KAAMC,IACLC,UAAW,CAACnD,MAAQ,aACpBoD,QAAS,YACTC,QA5TO,WAEf/L,EAAQH,GACRoF,GAAU,IA2TFsF,SAAW,UACXF,SAA4B,GAAjBrD,GAGf,CAAC2E,KAAMzN,EAAWU,OAClBkN,QAAS,SACTD,UAAW,CAAEvD,MAAO,CAAE0D,SAAU,MAAOtD,MAAO,UAC5CqD,QAp1Ba,WAGJ,YAAOhM,GAUXgC,KAy0BLwI,SAAW,WAKb,CAACoB,KAAK,kBAAM,cAAC,IAAD,CAA6BrD,MAAS,CAACI,MAAM,YAEvDoD,QAAS,WAETvB,SAAW,MAITwB,QA3nBY,SAACE,EAAQ/H,GAM7B,GALApE,EAAgB,YAAIC,IAKE,IAJtBmE,EAAU,CAACA,IAICmC,OAAa,OAAO+B,MAAM,yDACtC,IAAIjE,EAAK,YAAOpE,GACZoG,EAAK,YAAOC,MAAMjC,EAAMkC,QAAQC,QAChCjC,EAAYC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC5B0H,EAAiBhI,EAAQ,GAAGzE,GAC5B0M,EAAgBjI,EAAQ,GAAGtE,SAC3B6E,EAAU,GACVC,OAAMC,EAEV,IAAK,IAAMyH,KAAYjI,EACtBM,EAAQhC,KAAK0B,EAAMiI,GAAU3M,IAO9B,IADFiG,QAAQC,IAAI,UACIhB,GAAPD,GACLL,EAAYC,KAAKC,MAAsB,IAAhBD,KAAKE,eAEjBG,IADXD,EAAMD,EAAQI,MAAK,SAAAC,GAAO,OAAIA,GAAWT,QAEvCK,EAAMD,EAAQI,MAAK,SAAAC,GAAO,OAAIA,GAAWT,EAAY,MA3BhB,oBAoCbkC,eAAIpC,EAAQgC,IApCC,IAoC3C,yDAAWK,EAAX,KAAmBC,EAAnB,KAEM,GAAID,EAAM/G,IAAMyM,EAChB,CAK6B,MAAvBhI,EAAQ,GAAGtE,SAEfuE,EAAM0C,OAAQJ,EAAS,EAAG,EAExB,CACFhH,GAAK4E,EACL3E,MAAO,IACPC,GAAG,IACHC,SAAWuM,IAMVhI,EAAM0C,OAAQJ,EAAS,EAAG,EAC3B,CACAhH,GAAI4E,EACJ3E,MAAO,IACPC,GAAG,GACHC,SAAW,OAYf,QA3EuC,8BA6EzCoF,YAAW,WACThF,EAAQmE,GACRc,GAAU,KAGT,OA+iBG,SAAAf,GAAO,MACL,CACFyH,KAAK,WACL,IAAIU,EAAa,QAGjB,OAFmC,MAA/BnI,EAAQgH,UAAUoB,YACrBD,EAAa,QAEd,cAAC,KAAD,CACC/D,MAAS,CAACI,MAAM2D,MAKfP,QAAS,YACTvB,SAAW,MACXgC,OAA6B,MAApBrI,EAAQtE,SAGjBmM,QAAS9H,EAEPoG,SAA0C,MAA/BnG,EAAQgH,UAAUoB,aAgBrCE,WAAY,CACVC,IAAK,SAACpO,GAAD,OACH,cAAC,gBAAD,2BACMA,GADN,IAEE0M,UAAW,OACX2B,cAAe,SAAA3L,GAEb1C,EAAMqN,QAAQ,KAAKK,QAAQhL,EAAG1C,EAAM0B,OAOtC4M,YAAa,SAAC5L,GAEZ,IAFkB,EAEdmI,EAAS,YAAOnJ,GAChBoG,EAAK,YAAOC,MAAM8C,EAAU7C,QAAQC,QACpC6C,EAAY9K,EAAM0B,KAAKN,GAJT,cAMY8G,eAAI2C,EAAY/C,IAN5B,IAMlB,yDAAWK,EAAX,KAAmBC,EAAnB,KACE,GAAID,EAAM/G,IAAM0J,EAChB,CAACjE,EAAWC,IAAMsB,EAClB,QATgB,gCAqBpBmG,YAAa,SAAC7L,GACZ,IADkB,EACdmI,EAAS,YAAOnJ,GAChBoG,EAAK,YAAOC,MAAM8C,EAAU7C,QAAQC,QACpC6C,EAAY9K,EAAM0B,KAAKN,GACvB2J,EAAa,GAJC,cAMY7C,eAAI2C,EAAY/C,IAN5B,IAMlB,yDAAWK,EAAX,KAAmBC,EAAnB,KACE,GAAID,EAAM/G,IAAM0J,EAChB,CAACC,EAAa3C,EACd,QATgB,8BAed2C,IAAelE,EAAWC,MAC5BD,EAAWE,UAAYgE,IAI3ByD,UAAW,SAAC9L,IAEoB,IAA1BmE,EAAWE,WACbC,EAAWH,EAAWC,IAAKD,EAAWE,uBClmCpD0H,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFpJ,SAASqJ,eAAe,W","file":"static/js/main.0d74ceb0.chunk.js","sourcesContent":["import React, { forwardRef } from \"react\";\r\n\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\n\r\n//import cross from './cross.png';\r\n\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  //cross :forwardRef((props, ref) => <Edit {...props} ref={ref} />)\r\n};\r\n\r\nexport default tableIcons;","import MaterialTable,{MTableBodyRow} from \"@material-table/core\";\r\n//import MaterialTable,{MTableBodyRow} from \"material-table\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n//import { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport tableIcons from \"./MaterialTableIcons.js\";\r\nimport React ,{ useState,useEffect } from 'react';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBackOutlined';\r\nimport CancelRoundedIcon from '@mui/icons-material/CancelRounded';\r\nimport CancelOutlinedIcon from '@mui/icons-material/CancelOutlined';\r\nimport CheckCircleOutlineRoundedIcon from '@mui/icons-material/CheckCircleOutlineRounded';\r\nimport CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded';\r\nimport AddCircleOutlineRoundedIcon from '@mui/icons-material/AddCircleOutlineRounded';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport CallSplitRoundedIcon from '@mui/icons-material/CallSplitRounded';\r\nimport RemoveCircleOutlineRoundedIcon from '@mui/icons-material/RemoveCircleOutlineRounded';\r\nimport RemoveCircleRoundedIcon from '@mui/icons-material/RemoveCircleRounded';\r\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport * as XLSX from 'xlsx/xlsx.mjs';\r\nimport {zip} from 'pythonic';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n//import { GenericSQL } from 'dt-sql-parser';\r\n\r\n\r\n// const useStyles = makeStyles({\r\n//   colHeader: {\r\n//     color: \"red\",\r\n//     \"&:hover\": {\r\n//       color: \"blue\"\r\n//     }\r\n//   }\r\n// });\r\n\r\n//import reportWebVitals from './reportWebVitals';\r\n\r\n//import { CsvBuilder } from 'filefy';\r\n\r\n//TODO:\r\n//Add CircularPogress for row editining\r\n\r\n\r\nconst BasicTable = () => {\r\nconst [isLoading, setIsLoading] = useState(false);\r\n\r\nconst [forward_data,forward_action] = useState([\r\n  { id : 0,Query: \"SELECT * FROM\",BU : '',parentid:'no'},\r\n  { id : 1,Query: \"@bu_table\",BU : '',parentid:'no'},\r\n  { id : 1 ,Query: \"dsfsdfdsfdsf\",BU:'Others',parentid : 1},\r\n  { id : 2 ,Query: \"dsfsdfdsfdsf\",BU:'WTCMY',parentid : 1},\r\n  { id : 3 ,Query: \"dsfsdfdsfdsf\",BU:'WTCTH',parentid : 1},\r\n  { id : 4 ,Query: \"WHERE condition\",BU : '',parentid:'no'},\r\n  { id : 5 ,Query: \"@bu\",BU : '',parentid:'no'},\r\n  { id : 6 ,Query: \"dsfsdfdsfdsf\",BU:'WTCTW',parentid : 5},\r\n  { id : 7 ,Query: \"dsfsdfdsfdsf\",BU:'Others',parentid : 5},\r\n  { id : 8 ,Query: \"dsfsdfdsfdsf\",BU:'WTCTH',parentid : 5},\r\n]);\r\n\r\n\r\nconst [previsu_data,previous_action] = useState([\r\n  { id : 0,Query: \"SELECT * FROM\",BU : '',parentid:'no'},\r\n  { id : 1,Query: \"@bu_table\",BU : '',parentid:'no'},\r\n  { id : 2 ,Query: \"dsfsdfdsfdsf\",BU:'Others',parentid : 1},\r\n  { id : 3 ,Query: \"dsfsdfdsfdsf\",BU:'WTCMY',parentid : 1},\r\n  { id : 4 ,Query: \"dsfsdfdsfdsf\",BU:'WTCTH',parentid : 1},\r\n  { id : 5 ,Query: \"WHERE condition\",BU : '',parentid:'no'},\r\n  { id : 6 ,Query: \"@bu\",BU : '',parentid:'no'},\r\n  { id : 7 ,Query: \"dsfsdfdsfdsf\",BU:'WTCTW',parentid : 6},\r\n  { id : 8 ,Query: \"dsfsdfdsfdsf\",BU:'Others',parentid : 6},\r\n  { id : 9 ,Query: \"dsfsdfdsfdsf\",BU:'WTCTH',parentid : 6},\r\n]);\r\n\r\nconst [data, setData] = useState([\r\n  { id : 0,Query: \"SELECT * FROM\",BU : '',parentid:'no'},\r\n  { id : 1,Query: \"@bu_table\",BU : '',parentid:'no'},\r\n  { id : 2 ,Query: \"dsfsdfdsfdsf\",BU:'Others',parentid : 1},\r\n  { id : 3 ,Query: \"dsfsdfdsfdsf\",BU:'WTCMY',parentid : 1},\r\n  { id : 4 ,Query: \"dsfsdfdsfdsf\",BU:'WTCTH',parentid : 1},\r\n  { id : 5 ,Query: \"WHERE condition\",BU : '',parentid:'no'},\r\n  { id : 6 ,Query: \"@bu\",BU : '',parentid:'no'},\r\n  { id : 7 ,Query: \"dsfsdfdsfdsf\",BU:'WTCTW',parentid : 6},\r\n  { id : 8 ,Query: \"dsfsdfdsfdsf\",BU:'Others',parentid : 6},\r\n  { id : 9 ,Query: \"dsfsdfdsfdsf\",BU:'WTCTH',parentid : 6},\r\n\r\n]);\r\n\r\nconst [columns, setColumns] = useState([\r\n  { title: \"Query\", field: \"Query\",editable:'always', cellStyle: {\r\n    textAlign: \"centre\"},\r\n    editComponent: props => {\r\n      let display = ''\r\n      if (props.value.includes('@')){display = props.value.replace('@','')}\r\n      else {display = props.value}\r\n      return(\r\n    <TextField\r\n      //type=\"numeric\"\r\n      fullWidth={true}\r\n      multiline={true}\r\n      value={display}\r\n      onChange={e => props.onChange(e.target.value)}\r\n    />\r\n      )}\r\n\r\n\r\n  },\r\n  { title: \"BU\", field: \"BU\"   \r\n  ,textAlign: \"centre\",\r\n  lookup: {\r\n          None:'',\r\n          Others:\"Others\",\r\n          FTRTH:'FTRHK',\r\n          PNSHK:'PNSHK',\r\n          WTCHK:'WTCHK',\r\n          WTCID:\"WTCID\",\r\n          WTCPH:\"WTCPH\",\r\n          WWHK:\"WWHK\",\r\n          WTCTW:\"WTCTW\",\r\n          WTCMY:\"WTCMY\",\r\n          WTCTH:\"WTCTH\",\r\n          WTCSG:\"WTCSG\"\r\n\r\n        }\r\n},\r\n\r\n]);\r\n\r\n\r\n// const handleDeleteRows = (event, rowData) => {\r\n\r\n  \r\n//   //isLoading = true\r\n//   // let dataUpdate = [...data];\r\n//   // let row_table = [...data];\r\n//   // let range = [...Array(row_table.length).keys()];\r\n//   // let target_id = newValue.id\r\n//   // let pass_index = ''\r\n  \r\n//   // for (const[first , second] of zip(row_table , range))\r\n//   //   if (first.id == target_id)\r\n//   //   {pass_index = second ;\r\n//   //     break\r\n//   //   }\r\n    \r\n//   // console.log('test')\r\n//   // console.log(pass_index)\r\n\r\n//   rowData = [rowData]\r\n//   let _data = [...data];\r\n//   console.log(rowData)\r\n//   rowData.forEach(rd => {\r\n//     _data = _data.filter(t => t.id !== rd.id);\r\n//   });\r\n//   let new_data = _data\r\n//   if (rowData[0].parentid != 'no'){console.log('pass'); setData(_data);}\r\n//   else {new_data.forEach(rd => {\r\n//     _data = _data.filter(t => t.parentid !== rowData[0].id)\r\n//   }); setData(_data);\r\n// } \r\n// };\r\n\r\n//TODO: wtcmy missing\r\n//TODO: % as child data recongiztion\r\nconst ExportOption = () => {\r\n  let bu_list_use = ['ftrhk','pnshk','wtchk','wtcid','wtcph','wwhk','wtctw','wtcmy','wtcth','wtcsg']\r\n  let bu_list = []\r\n  var export_data = [...data]\r\n  let parent_data = []\r\n  var child_data = []\r\n  let export_json = {}\r\n  let counter = 0\r\n  let unqiue_child = []\r\n  let unqiue_child_list = []\r\n  var temp_query = '.'\r\n\r\n  //export the master file\r\n  var test = ExportMaster()\r\n\r\n  return \r\n// console.log(export_data)\r\n\r\n//   for (let low_bu in bu_list_use)\r\n//   {bu_list.push(bu_list_use[low_bu].toUpperCase())}\r\n\r\n//   // seperated export_data into two type\r\n//   for (let data_use in export_data)\r\n//   if (export_data[data_use].parentid == 'no')\r\n//   {parent_data.push(export_data[data_use])}\r\n//   else \r\n//   {  \r\n//     child_data.push(export_data[data_use])}\r\n\r\n\r\n//   let temp_child_data = child_data\r\n//   let complete_bu = bu_list\r\n\r\n\r\n//   // get all bu child data\r\n//   for (let child in child_data)\r\n//   {unqiue_child.push(child_data[child].parentid)}\r\n\r\n//   // only extract unique child data\r\n//   unqiue_child = [... new Set(unqiue_child)]  \r\n//   // console.log(unqiue_child)\r\n\r\n//   // add all remaining bu in child data\r\n//   for (var new_id in unqiue_child)\r\n//       {\r\n//       temp_query = temp_child_data.filter(n => n.parentid == unqiue_child[new_id] && n.BU == 'Others')\r\n//       // console.log(temp_child_data)\r\n//       temp_query = temp_query[0]\r\n//       let temp_list = child_data.filter(n => n.parentid == unqiue_child[new_id])\r\n//       temp_list.forEach(element => {\r\n//         complete_bu =  complete_bu.filter(n => n !== element.BU)\r\n//         // console.log(complete_bu)\r\n//         // console.log(temp_query)\r\n        \r\n//        })\r\n//       for (var bu_child in complete_bu)\r\n//       {\r\n//        let new_query = {}\r\n//        new_query['id'] = temp_query['id']\r\n//        new_query['Query'] = temp_query['Query']\r\n//        new_query['BU'] =complete_bu[bu_child]\r\n//        new_query['parentid'] = temp_query['parentid']\r\n\r\n//        child_data.push(new_query)\r\n\r\n//       }\r\n//     }\r\n//     child_data = child_data.filter(n => n.BU != 'Others')\r\n//     console.log(child_data)\r\n  \r\n\r\n//   for (var bu in bu_list )\r\n//   {export_json[bu_list[bu]] = []\r\n//     for (var p_query in parent_data)\r\n//     {\r\n//       if (parent_data[p_query].Query.includes('@') == true)\r\n//       {//create id only \r\n//         // console.log(parent_data[p_query].Query.includes('%'))\r\n//         for (var c_query in child_data )\r\n//         {if(child_data[c_query].parentid == parent_data[p_query].id && child_data[c_query].BU == bu_list[bu])\r\n//         {\r\n//         export_json[bu_list[bu]].push(child_data[c_query].Query)\r\n//         }}\r\n//       }\r\n//       else\r\n//       {export_json[bu_list[bu]].push(parent_data[p_query].Query)}\r\n\r\n    \r\n\r\n    \r\n//   }\r\n// }\r\n// console.log(export_json)\r\n\r\n  }\r\n\r\n  const ExportMaster = () => {\r\n    let master_export = [...data]\r\n    let template_query = []\r\n    let template_json = {}\r\n    let bu_list_use = ['ftrhk','pnshk','wtchk','wtcid','wtcph','wwhk','wtctw','wtcmy','wtcth','wtcsg']\r\n    let bu_lister = []\r\n    let temp_no_head = ''\r\n    let loop_check = 'nothing'\r\n    let other_check = 'nothing'\r\n\r\n    for (let low_bu in bu_list_use)\r\n  {bu_lister.push(bu_list_use[low_bu].toUpperCase())}\r\n\r\n\r\n    \r\n    //create the teamplate_query\r\n    for (var temp in master_export)\r\n    {if (master_export[temp].parentid == 'no')\r\n    {template_query.push(master_export[temp].Query)}\r\n  }\r\n    //create the bu-specifci variable\r\n    for (var temp in master_export)\r\n    {if (master_export[temp].Query.includes('@') == true)\r\n    {var skip_firster = master_export[temp].Query.substring(1)\r\n     template_json[skip_firster] = []\r\n    for (var temp_sub in master_export)\r\n    {\r\n      if (master_export[temp_sub].parentid == master_export[temp].id)\r\n      {\r\n        template_json[skip_firster].push({'BU':master_export[temp_sub].BU,\r\n                                          'Query':master_export[temp_sub].Query})\r\n\r\n      }\r\n      \r\n    \r\n\r\n    }\r\n  \r\n  }\r\n  \r\n  }\r\n\r\n  template_json['@bu_query'] = {}\r\n  for (let bu_name in bu_lister)\r\n    {template_json['@bu_query'][bu_lister[bu_name]] = [];\r\n    \r\n    for (let sub_query in template_query)\r\n      {loop_check = 'nothing'\r\n       other_check = 'nothing'\r\n        if (template_query[sub_query].includes('@') == true)\r\n        {temp_no_head = template_query[sub_query].substring(1)\r\n          for (let check_check in template_json[temp_no_head])\r\n            {if (template_json[temp_no_head][check_check].BU == bu_lister[bu_name])\r\n                {loop_check = template_json[temp_no_head][check_check].Query}\r\n\r\n             {if (template_json[temp_no_head][check_check].BU == 'Others')\r\n                {other_check = template_json[temp_no_head][check_check].Query}}\r\n            }\r\n              \r\n            if (loop_check == 'nothing')\r\n            {template_json['@bu_query'][bu_lister[bu_name]].push(other_check)}\r\n            else\r\n            {{template_json['@bu_query'][bu_lister[bu_name]].push(loop_check)}}\r\n\r\n              }\r\n          else\r\n          {{template_json['@bu_query'][bu_lister[bu_name]].push(template_query[sub_query])}\r\n        \r\n        }\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  //console.log(template_json)\r\n\r\n  // export the data to json\r\n  template_json['template_query'] = template_query\r\n  //console.log(template_json)\r\n  const fileData = JSON.stringify(template_json);\r\n  const blob = new Blob([fileData], {type: \"text/plain\"});\r\n  const url = URL.createObjectURL(blob);\r\n  const link = document.createElement('a');\r\n  link.download = 'master.json';\r\n  link.href = url;\r\n  link.click();\r\n\r\n}\r\n\r\n    \r\n    \r\n    \r\n    \r\n  //   }\r\n  // }\r\n  // console.log(export_json)\r\n  // //console.log(counter)\r\n\r\n \r\nconst bu_specific = (e , rowData) => {\r\n    previous_action([...data])\r\n    let _data = [...data]\r\n    let mum_id = rowData.id\r\n    let random_id = Math.floor(Math.random() * 1000000)\r\n    let id_list = []\r\n    let obj = undefined\r\n    let temp_str = ''\r\n    while (obj != undefined){\r\n      random_id = Math.floor(Math.random() * 1000000);\r\n      obj = id_list.find(element => element == random_id);\r\n      if (obj == undefined){\r\n        obj = id_list.find(element => element == random_id + 1) ;\r\n        \r\n      }\r\n    }\r\n    _data.push({ id : random_id ,Query: \"-\",BU:'-',parentid : mum_id})\r\n    for (let data_number in _data)\r\n    {temp_str = _data[data_number].Query\r\n      if (_data[data_number].id == mum_id &  _data[data_number].Query.includes('@') != true)\r\n      {_data[data_number].Query = '@' + temp_str}\r\n\r\n    }\r\n    //rowData = [rowData]\r\n    //console.log(rowData)\r\n\r\n    //{ id : 8 ,Query: \"dsfsdfdsfdsf\",BU:'WTCTH',parentid : 5},\r\n\r\n    setTimeout(() => {\r\n      setData(_data);\r\n      first_set(false);\r\n      // setIsLoading(false)\r\n      \r\n    }, 500)\r\n}\r\n  \r\n\r\nconst handleAddRows = (event , rowData) => {\r\n  previous_action([...data])\r\n  rowData = [rowData]\r\n  // TODO:\r\n  // DONE , rmb to change the text trasnform of parentid to 'no'\r\n  // setIsLoading(true)\r\n  if (rowData.length != 1){return(alert('you can\"t select more than one row when u add new row'));}\r\n  let _data = [...data];\r\n  let range = [...Array(_data.length).keys()];\r\n  let random_id = Math.floor(Math.random() * 1000000);\r\n  let index_variable = rowData[0].id\r\n  let index_partent = rowData[0].parentid\r\n  let id_list = []\r\n  let obj = undefined\r\n  \r\n  for (const item_key in _data )\r\n  {id_list.push(_data[item_key].id)}\r\n\r\n//   console.time('Timer name');\r\n//   console.log('a')\r\n// //do critical time stuff\r\n// console.timeEnd('Timer name');\r\nconsole.log('b')\r\n  while (obj != undefined){\r\n    random_id = Math.floor(Math.random() * 1000000);\r\n    obj = id_list.find(element => element == random_id);\r\n    if (obj == undefined){\r\n      obj = id_list.find(element => element == random_id + 1) ;\r\n      \r\n    }\r\n  }\r\n//   console.time('Timer name');\r\n//   console.log('c')\r\n// //do critical time stuff\r\n// console.timeEnd('Timer name');\r\n\r\nfor (const[first , second] of zip(_data , range))\r\n    \r\n      if (first.id == index_variable)\r\n      { \r\n        //console.log(rowData[0].parentid)\r\n        //console.log(rowData)\r\n        \r\n\r\n        if (rowData[0].parentid != 'no')\r\n      { \r\n        _data.splice( second + 1 ,0,\r\n          \r\n          { \r\n        id : random_id,\r\n        Query: '-',\r\n        BU:'-',\r\n        parentid : index_partent});\r\n      }\r\n       else\r\n       {  \r\n        // console.log(rowData[0].parentid)\r\n\r\n         _data.splice( second + 1 ,0,\r\n        { \r\n        id :random_id,\r\n        Query: '-',\r\n        BU:'',\r\n        parentid : \"no\"\r\n        }\r\n        // ,\r\n        // {\r\n        //   id : random_id + 1,\r\n        //   Query: 'NULL',\r\n        //   BU:'NULL',\r\n        //   parentid : random_id\r\n        //   }\r\n        \r\n        );\r\n      }\r\n    break}\r\n \r\n  setTimeout(() => {\r\n    setData(_data);\r\n    first_set(false);\r\n    // setIsLoading(false)\r\n    \r\n  }, 500)\r\n};\r\n\r\nconst DrageState = {\r\n  row: -1,\r\n  dropIndex: -1 // drag target\r\n};\r\n\r\nconst offsetIndex = (from, to, arr = []) => {\r\n  if (from < to) {\r\n    console.log('to higher')\r\n    let start = arr.slice(0, from),\r\n      between = arr.slice(from + 1, to + 1),\r\n      end = arr.slice(to + 1);\r\n      //console.log(between)\r\n      //console.log(arr[from])\r\n    // console.log(start)\r\n    // console.log(arr[from].parentid)\r\n    let return_list =  [...start, ...between, arr[from], ...end]\r\n    if (arr[from].parentid != 'no'){return return_list}\r\n    else {\r\n      let reload_data = []\r\n      let temp_list = []\r\n      let range = [...Array(between.length).keys()];\r\n\r\n      for (const[first, second] of zip(between , range))\r\n      if (first.parentid == arr[from].id)\r\n      {\r\n        reload_data.push(second);\r\n        temp_list.push(first)\r\n      };\r\n      \r\n    if (reload_data.length == 0)\r\n    { return return_list} \r\n    else{\r\n      console.log(reload_data)\r\n      let min_math = Math.min(reload_data)\r\n      let new_between = between.splice(min_math,between.length-1)\r\n      console.log(new_between)\r\n      console.log(between)\r\n      console.log(start)\r\n      console.log(arr[0,from])\r\n      //console.log(new_between)\r\n      let new_return = [...start, ...between, arr[from],...temp_list ,...end]\r\n      //console.log(new_between)\r\n      //console.log(between)\r\n      console.log(new_return)\r\n      return new_return\r\n    }\r\n      }\r\n    }\r\n  if (from > to) {\r\n    let start = arr.slice(0, to),\r\n      between = arr.slice(to, from),\r\n      end = arr.slice(from + 1);\r\n      //console.log()\r\n    return [...start, arr[from], ...between, ...end];\r\n  }\r\n  return arr;\r\n};\r\nconst reOrderRow = (from, to) => {\r\n  //console.log(from)\r\n  //console.log(to)\r\n\r\n  //TODO:\r\n  previous_action([...data])\r\n  let _data = data;\r\n  //console.log(from)\r\n  //console.log(_data[from].parentid)\r\n  if (_data[from].parentid == 'no' & _data[to].parentid=='no'){}\r\n  else {if(_data[from].parentid != 'no' & _data[to].parentid != 'no')\r\n  {if(_data[from].parentid == _data[to].parentid){} else{return}}\r\n  else{return}}\r\n  \r\n  let newtableData = offsetIndex(from, to, _data);\r\n  //console.log(newtableData)\r\n  //Update react state\r\n\r\n  setData(newtableData);\r\n  first_set(false);\r\n\r\n  //console.log(newtableData)\r\n  //console.log(data)\r\n\r\n};\r\n\r\n//upload file function \r\n//const[colDefs,setColDefs] = useState()\r\n//const[dataDefs,setDataDefs] = useState()\r\n\r\nconst importExcel =(e) =>{\r\n  //previous_action([...data])\r\n  //console.log(e.target.files)\r\n  const file = e.target.files[0]\r\n  console.log(file.name)\r\n  //var mydata = JSON.parse(file);\r\n\r\n  //alert(mydata[0].name);\r\n  //alert(mydata[0].age);\r\n  //alert(mydata[1].name);\r\n  //alert(mydata[1].age); \r\n\r\n  //return \r\n\r\n  const reader = new FileReader()\r\n  if (file.name.includes('.json'))\r\n  {\r\n  reader.onload=(e)=>{\r\n    console.log(reader.name)\r\n    var jsonObj = JSON.parse(e.target.result);\r\n    //return \r\n    var query_list = [] \r\n    for (var temp_que in jsonObj.template_query)\r\n    {\r\n      var random_id = Math.floor(Math.random() * 1000000); \r\n      if (jsonObj.template_query[temp_que].includes('@') != true)\r\n      {query_list.push(\r\n        { id : random_id,\r\n          Query: jsonObj.template_query[temp_que],\r\n          BU : '',\r\n          parentid:'no'}\r\n      )\r\n      }\r\n      else \r\n      {var skip_first = jsonObj.template_query[temp_que].substring(1)\r\n        query_list.push(\r\n          { id : random_id,\r\n            Query: jsonObj.template_query[temp_que],\r\n            BU : '',\r\n            parentid:'no'}\r\n        )\r\n        for (var sub_data in jsonObj[skip_first])\r\n        {query_list.push(\r\n          {\r\n          id : random_id + Math.floor(Math.random() * 100),\r\n          Query:jsonObj[skip_first][sub_data].Query,\r\n          BU : jsonObj[skip_first][sub_data].BU,\r\n          parentid : random_id\r\n\r\n          }\r\n        )\r\n        }\r\n      }\r\n\r\n      }\r\n      setData(query_list)\r\n    }\r\n  }\r\n  else if (file.name.includes('.txt'))\r\n  {  \r\n    reader.onload=(e)=>{\r\n      let clean_list = []\r\n      let result_list = e.target.result.split(/\\r?\\n/)\r\n\r\n      for (let iter in result_list)\r\n      {\r\n      var random_id = Math.floor(Math.random() * 1000000)\r\n      if (result_list[iter].replace(/\\s+/g,'') != '' && result_list[iter].startsWith('--')!= true)\r\n      {clean_list.push(\r\n        { id : random_id,\r\n          Query: result_list[iter],\r\n          BU : '',\r\n          parentid:'no'}\r\n      )}\r\n\r\n      }\r\n      setData(clean_list)\r\n    }\r\n\r\n    }\r\n  else \r\n  {alert ('incorrect file type')}\r\n  \r\nreader.readAsBinaryString(file)\r\n}\r\n\r\n// convert csv to json\r\nconst convertToJson = (csv) => {\r\n  var lines = csv.split(\"\\n\");\r\n\r\n  var result = [];\r\n\r\n  var headers = lines[0].split(\",\");\r\n\r\n  for (var i = 1; i < lines.length; i++) {\r\n    var obj = {};\r\n    var currentline = lines[i].split(\",\");\r\n    //console.log(currentline)\r\n\r\n    for (var j = 0; j < headers.length; j++) {\r\n      obj[headers[j]] = currentline[j];\r\n    }\r\n\r\n    result.push(obj);\r\n  }\r\n\r\n  //return result; //JavaScript object\r\n  return (result) //JSON\r\n};\r\n\r\n// const onDragEnd = (result) => {\r\n//   const { destination, source } = result;\r\n//   if (!destination) return;\r\n//   if (source.index !== destination.index) {\r\n//     let copyArray = [...data];\r\n//     let temp = data[source.index];\r\n//     copyArray.splice(source.index, 1);\r\n//     copyArray.splice(destination.index, 0, temp);\r\n//     setData(copyArray);\r\n//   }\r\n// };\r\nconst [first_disable,first_set] = useState(true)\r\n\r\nconst lastpage = () => {\r\n  \r\n  setData(previsu_data)\r\n  first_set(true)\r\n  }\r\n//   this.setState({ visible: true })\r\n//   console.log(previsu_data)\r\n//   console.log('last_page')\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className = \"OCTAVIA\">\r\n    <input type ='file' onChange ={importExcel}/>\r\n\r\n  <MaterialTable \r\n  title=\"Query Editior\" \r\n  style={{ width: \"100%\", margin: \"0%\"}}\r\n  icons={{Edit: () => <EditOutlinedIcon  style={{ color: \"black\" }}/>,\r\n          Delete: () => <RemoveCircleOutlineRoundedIcon  style={{ color: \"black\" }} />,\r\n          Check: () => <CheckCircleOutlineRoundedIcon  style = {{color :'black',\"margin-left\": \"30px\"}}/>,\r\n          Clear: () => <CancelOutlinedIcon style = {{color :'black'}} />\r\n\r\n\r\n}\r\n        }\r\n\r\n  // icons={{\r\n  //   Edit: () => <EditIcon style={{ color: \"orange\" }} />,\r\n  //   Delete: () => <DeleteIcon style={{ color: \"red\" }} />\r\n  // }}\r\n  // onTreeExpandChange = {(path,data) =>{\r\n  //   this.dataManager.changeTreeExpand(path);\r\n  //   this.setState(this.dataManager.getRenderState(), () => {\r\n  //     this.props.onTreeExpandChange &&\r\n  //       this.props.onTreeExpandChange(data, data.tableData.isTreeExpanded)\r\n  //   })}}\r\n\r\n    editable = {{onRowUpdate:(newValue, oldValue) =>\r\n      new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          console.log(data)\r\n          let dataUpdate = [...data];\r\n          let row_table = [...data];\r\n          let range = [...Array(row_table.length).keys()];\r\n          let target_id = newValue.id\r\n          let pass_index = ''\r\n          let newValue_check = newValue\r\n          \r\n          for (const[first , second] of zip(row_table , range))\r\n            if (first.id == target_id)\r\n            {pass_index = second ;\r\n              break\r\n            }\r\n          \r\n          console.log(oldValue)\r\n\r\n          if (oldValue.Query.startsWith('@')==true)\r\n          {newValue_check.Query = newValue.Query.replace('@','');\r\n          newValue_check.Query = '@' + newValue_check.Query}\r\n          else \r\n          {newValue_check.Query = newValue.Query.replace('@','')}\r\n\r\n            \r\n          //console.log('test')\r\n          //console.log(pass_index)\r\n\r\n\r\n\r\n          // const index = oldValue.tableData.id;\r\n          // console.log(oldValue.tableData)\r\n          // console.log(newValue)\r\n          //console.log(columnDef)\r\n            dataUpdate = dataUpdate.filter(t => t.id !== newValue.id);\r\n            dataUpdate.splice(pass_index,0,newValue_check)\r\n          \r\n          // dataUpdate\r\n          // dataUpdate[pass_index] = newValue\r\n          //console.log(dataUpdate_use)\r\n          previous_action([...data]);\r\n          setData(dataUpdate);\r\n          first_set(false)\r\n          resolve();\r\n        }, 1000)\r\n      }),\r\n\r\n\r\n    onRowDelete:(newValue,rowData) =>\r\n        new Promise((resolve, reject) => {\r\n          setTimeout(() => {\r\n           // console.log(newValue)\r\n           // console.log(oldValue)\r\n          let rowData = [newValue];\r\n          let _data = [...data];\r\n          //console.log(newValue)\r\n      rowData.forEach(rd => {\r\n        _data = _data.filter(t => t.id !== rd.id);\r\n      });\r\n      let mum_check = [..._data]\r\n\r\n\r\n      rowData.forEach(rd => {\r\n        mum_check = mum_check.filter(t => t.parentid == rd.parentid);\r\n      });\r\n      console.log(mum_check)\r\n      let new_data = _data\r\n      //console.log(columnDef)\r\n      if (rowData[0].parentid != 'no')\r\n      {if (mum_check.length == 0)\r\n        {for (let data_sub in _data)\r\n          {if (rowData[0].parentid == _data[data_sub].id && _data[data_sub].Query.startsWith('@'))\r\n            {_data[data_sub].Query = _data[data_sub].Query.substring(1)}\r\n          \r\n          \r\n          }\r\n        }\r\n        else{\r\n          console.log('pass')}\r\n      }\r\n      //setData(_data);}\r\n      else {new_data.forEach(rd => {\r\n        _data = _data.filter(t => t.parentid !== rowData[0].id)\r\n      })}; \r\n      previous_action([...data])\r\n      setData(_data);\r\n      first_set(false);\r\n      resolve();\r\n    }, 1000)\r\n        })\r\n\r\n    \r\n    }}\r\n    \r\n    \r\n\r\n        \r\n  // editable = {{onRowAdd:setIsLoading(false)}}\r\n  columns={\r\n    columns\r\n  }\r\n  data={data} \r\n  parentChildData={(row, rows) => rows.find(a => a.id == row.parentid)}\r\n  // onTreeExpandChange={() => console.log('test tree expand change')}\r\n  //onTreeExpandChange={(data,isTreeExpanded) => console.log(data)}\r\n\r\n    \r\n  // icons={}\r\n  options={{\r\n    actionsCellStyle: {\r\n      color: 'black',\r\n      },\r\n    tableLayout: 'auto',\r\n    headerSelectionProps: {\r\n      disabled : true    },\r\n    //addRowPosition: \"Last\",\r\n    //search: false,\r\n    //actionsColumnIndex: 0,\r\n    headerStyle: { position: 'sticky',top:1, backgroundColor: \"#f7f7f7\" },\r\n    isLoading: true,\r\n    sorting : false,\r\n    //grouping : true,\r\n    //minBodyHeight:500,\r\n    //maxBodyHeight:1000,\r\n    paging:false,\r\n    padding:'dense',\r\n    //editable :true,\r\n    // exportButton: {\r\n    //   csv: true,\r\n    //   pdf: false,\r\n    //   //animals :true\r\n    // },\r\n    //exportAllData : true,\r\n  //   exportCsv: (data, columns) => {const columnTitles = columns\r\n  //     .map(columnDef => columnDef.title);\r\n  \r\n  // const csvData = data.map(rowData =>\r\n  //       columns.map(columnDef => rowData[columnDef.field]),\r\n  //     );\r\n\r\n  // const builder = new CsvBuilder(`data.csv`)\r\n  //       .setColumns(columnTitles)\r\n  //       .addRows(csvData)\r\n  //       .exportFile();\r\n\r\n  // return builder;\r\n\r\n  // exportButton: {\r\n  //   csv: true,\r\n  //   pdf: true\r\n  // } ,    \r\n  //actionsColumnIndex: -1,\r\n  //toolbarButtonAlignment:\"left\",\r\n  selection : false,\r\n    draggable: true,\r\n    selectionProps: row => ({\r\n                            disabled : true,\r\n                            //checked:true,\r\n                            //hidden:true\r\n\r\n\r\n                            \r\n                          }),\r\n          rowStyle: rowData => {\r\n            //console.log(rowData)\r\n            \r\n            var data = rowData.tableData.isTreeExpanded == true\r\n            //console.log(rowData)\r\n            let styles = { transition: 'transform 300ms' };\r\n            const levels = rowData.tableData.path.length === 1 ? 0 : rowData.tableData.path.length;\r\n            styles = { ...styles, '--left-before': `${levels * 6}px` };\r\n            //console.log([...rowData])\r\n            //for (let temp_data in rowData)\r\n            //{console.log(rowData[temp_data])}\r\n            //{if rowData[temp_data]}\r\n            if (rowData.parentid != 'no')\r\n            {return{\r\n              //...styles,\r\n              //padding : 'dense',\r\n              'text-indent': '20px',\r\n              'font-size': '12px',\r\n              'white-space':'pre',\r\n\r\n              //fontWeight: 600,\r\n              backgroundColor: 'rgba(77, 93, 241, 0.08)',\r\n            }\r\n          }\r\n          else {return {'font-size': '12px', 'white-space':'pre'\r\n        }}\r\n\r\n            // return rowData.tableData.isTreeExpanded\r\n            //   ? {\r\n            //       //...styles,\r\n            //       padding : 'dense',\r\n            //       fontWeight: 600,\r\n            //       backgroundColor: 'rgba(77, 93, 241, 0.08)'\r\n            //     }\r\n            //   : {};\r\n          }\r\n         \r\n          \r\n        \r\n                      \r\n\r\n\r\n\r\n\r\n\r\n    // rowStyle: {\r\n    //   fontSize: 8,\r\n    //   //height: 8,\r\n    //   //borderBottom: \"none\",\r\n    //   borderBottom: '2px solid white'\r\n\r\n    // },\r\n    //cellStyle : {width:200,\r\n     //           maxWidth:200},\r\n\r\n\r\n    //selectionProps: row => ({disabled: row.tableData.disabled})\r\n    \r\n    }}\r\n\r\n\r\n    localization={{\r\n      header : {\r\n         actions: 'Actions'\r\n      }\r\n    }}\r\n\r\n    // localization={{\r\n    //   toolbar: {\r\n    //     exportCSVName: \"Export CSV\",\r\n    //    // exportPDFName: \"Export as pdf!!\"\r\n    //   },\r\n      \r\n    // }}\r\n    \r\n    // cellEditable={{\r\n    //   onCellEditApproved: (newValue, oldValue, rowData, columnDef) => {\r\n    //     return new Promise((resolve, reject) => {\r\n    //       const clonedData = [...data]\r\n    //      //console.log('haha')\r\n    //       console.log(clonedData)\r\n    //       console.log(newValue)\r\n    //       console.log(rowData.id)\r\n    //       console.log(columnDef.field)\r\n    //       //console.log(clonedData[rowData.id][columnDef.field])\r\n    //       clonedData[rowData.id][columnDef.field] = newValue //TODO click yes has no repsonse\r\n    //       console.log('dfdf')\r\n\r\n    //       console.log(clonedData)\r\n    //       setData(clonedData)\r\n    //       setTimeout(resolve, 4000);\r\n\r\n    //       // setTimeout(() => {\r\n    //       //   setData(clonedData);            \r\n    //       // }, 5\r\n    //       // )\r\n          \r\n    //     });\r\n    //   }\r\n    // }}\r\n    //LastPage\r\n    \r\n    actions={[\r\n      // {icon: tableIcons.Add,\r\n        {icon: ArrowBackIcon,\r\n          iconProps: {color:  \"secondary\" },\r\n          tooltip: \"last step\",\r\n          onClick: lastpage,\r\n          //,isFreeAction:true\r\n          position : 'toolbar'  ,\r\n          disabled : first_disable == true,\r\n         \r\n        },\r\n      {icon: tableIcons.Export,\r\n      tooltip: \"export\",\r\n      iconProps: { style: { fontSize: \"6px\", color: \"green\" } },\r\n        onClick: ExportOption,\r\n        //,isFreeAction:true\r\n        position : 'toolbar'\r\n\r\n      },\r\n      // icons={{Edit: () => <EditOutlinedIcon style={{ color: \"grey\" }}/>,\r\n\r\n      {icon:() => <AddCircleOutlineRoundedIcon style = {{color:\"black\"}}/>,\r\n        // icon: tableIcons.Add,\r\n        tooltip: \"Add Rows\",\r\n        //iconProps: { style: { fontSize: \"6px\", color: \"green\" } },\r\n        position : 'row',\r\n        //hidden : true,\r\n        //isFreeAction : true,\r\n        //onKeypress: console.log('haha'),\r\n          onClick: handleAddRows,\r\n          //isLoading: true,\r\n      \r\n      \r\n        },\r\n\r\n        rowData =>(\r\n          {\r\n        icon:() => {\r\n        let color_type = 'black';\r\n        if (rowData.tableData.childRows != null)\r\n        {color_type = 'grey'}\r\n        return(\r\n        <CallSplitRoundedIcon\r\n         style = {{color:color_type}}/>\r\n        )},\r\n        \r\n                    \r\n          // icon: tableIcons.DetailPanel,\r\n          tooltip: \"Variation\",\r\n          position : 'row',\r\n          hidden : rowData.parentid != 'no',\r\n          //isFreeAction : true,\r\n          //onKeypress: console.log('haha'),\r\n          onClick: bu_specific,\r\n            //isLoading: true,\r\n            disabled : rowData.tableData.childRows != null\r\n          })\r\n        \r\n        // {icon: tableIcons.Edit,\r\n        //   tooltip: \"Edit\",\r\n        //   //isFreeAction : true,\r\n        //   //onKeypress: console.log('haha')\r\n        //     onClick: handleAddRows\r\n            \r\n        //    // , isFreeAction:true\r\n  \r\n          // }\r\n        \r\n        \r\n    ]}\r\n    // TODO working on rewriting the editfield component to add enter or delete function\r\n    components={{\r\n      Row: (props) => (\r\n        <MTableBodyRow\r\n          {...props}\r\n          draggable= \"true\"\r\n          onDoubleClick={e => {\r\n            //console.log(props.data);\r\n            props.actions[4]().onClick(e, props.data);\r\n            //alert(\"Make row editable\");\r\n          }}\r\n          // onKeyUp={event => {\r\n          //   if (event.key === \"Enter\"){handleAddRows(1,props.data.tableData)}}}\r\n            \r\n          //onKeyPress={handleAddRows(1,props.data.tableData)}\r\n          onDragStart={(e) => {\r\n            //console.log(\"onDragStart\");\r\n            let row_table = [...data]\r\n            let range = [...Array(row_table.length).keys()];\r\n            let target_id = props.data.id\r\n            //let pass_index = ''\r\n            for (const[first , second] of zip(row_table , range))\r\n              if (first.id == target_id)\r\n              {DrageState.row = second ;\r\n              break}\r\n\r\n              //console.log(range)\r\n\r\n\r\n            //console.log(pass_index)\r\n            //DrageState.row = props.data.tableData.id;\r\n            //DrageState.row = pass_index;\r\n\r\n            //console.log(DrageState.row);\r\n\r\n          }}\r\n          onDragEnter={(e) => {\r\n            let row_table = [...data]\r\n            let range = [...Array(row_table.length).keys()];\r\n            let target_id = props.data.id\r\n            let pass_index = ''\r\n\r\n            for (const[first , second] of zip(row_table , range))\r\n              if (first.id == target_id)\r\n              {pass_index = second ;\r\n              break}\r\n              //console.log(pass_index)\r\n\r\n\r\n            //e.preventDefault();\r\n            //console.log(\"onDragEnter\");\r\n            if (pass_index !== DrageState.row) {\r\n              DrageState.dropIndex = pass_index;\r\n            }\r\n          }}\r\n\r\n          onDragEnd={(e) => {\r\n            //console.log(`onDragEnd`);\r\n            if (DrageState.dropIndex !== -1) {\r\n              reOrderRow(DrageState.row, DrageState.dropIndex);\r\n            }\r\n            //DrageState.row = -1;\r\n            //DrageState.dropIndex = -1;\r\n          }}\r\n\r\n        />\r\n        \r\n\r\n        \r\n      ),\r\n      \r\n    }\r\n  }\r\n  />\r\n  \r\n</div>\r\n\r\n  \r\n  \r\n\r\n  );\r\n};\r\n// reference: for icons\r\n//https://stackoverflow.com/questions/62339570/how-to-change-the-default-material-table-icons\r\n\r\nexport default BasicTable \r\n\r\n\r\n\r\n  ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport BasicTable from './App'\r\n\r\n//import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BasicTable />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}