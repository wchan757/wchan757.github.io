{"version":3,"sources":["MaterialTableIcons.js","keyword_highlight.js","App.js","index.js"],"names":["tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","keyword_highlight","BasicTable","useUndo","useCheckpoints","countState","undoCount","set","reset","undo","findChunksAtBeginningOfWords","redo","canUndo","canRedo","present","makeStyles","tableRow","fontsize","padding","overflow","useStyles","autoEscape","caseSensitive","sanitize","searchWords","textToHighlight","chunks","textLow","toLowerCase","singleTextWords","split","fromIndex","singleTextWordsWithPos","map","s","indexInWord","indexOf","length","word","index","forEach","sw","swLow","start","end","push","startsWith","useState","selectedRow","setSelectedRow","id","Query","BU","parentid","previous_action","data","setData","lasttime","title","field","editComponent","display","value","includes","replace","TextField","InputProps","style","fontSize","size","multiline","Margin","fullWidth","autofocus","onKeyUp","e","keyCode","target","setSelectionRange","onKeyDown","selectionStart","selectionEnd","console","log","slice","onChange","preventDefault","onFocus","render","rowData","className","findChunks","highlightStyle","unhighlightStyle","textAlign","editable","column_meta","row_value","lookup","None","Others","FTRTH","PNSHK","WTCHK","WTCID","WTCPH","WWHK","WTCTW","WTCMY","WTCTH","WTCSG","columns","ExportMaster","job_type","master_export","template_query","template_json","bu_list_use","bu_lister","temp_no_head","loop_check","other_check","low_bu","toUpperCase","temp","skip_firster","substring","temp_sub","bu_name","sub_query","check_check","fileData","JSON","stringify","zip","JSZip","temp_file","join","file","generateAsync","type","then","content","saveAs","blob","Blob","url","URL","createObjectURL","link","document","createElement","download","href","click","bu_specific","_data","mum_id","random_id","Math","floor","random","id_list","obj","undefined","randomName","uniqueNamesGenerator","dictionaries","adjectives","colors","animals","find","element","data_number","setTimeout","first_set","DrageState","row","dropIndex","reOrderRow","from","to","newtableData","arr","between","return_list","reload_data","temp_list","range","Array","keys","first","second","min_math","min","new_between","splice","new_return","offsetIndex","first_disable","files","name","reader","FileReader","onload","jsonObj","parse","result","query_list","temp_que","skip_first","sub_data","clean_list","result_list","iter","alert","readAsBinaryString","width","margin","icons","color","isEditable","onRowUpdate","newValue","oldValue","Promise","resolve","reject","dataUpdate","row_table","column_check","target_id","pass_index","newValue_check","data_status","data_output","data_count","temp_list_array","filter","row_2","row_temp","uniqueCount","Set","t","onRowDelete","rd","mum_check","new_data","data_sub","parentChildData","rows","a","onRowClick","evt","tableData","options","loadingType","tableLayout","headerSelectionProps","disabled","headerStyle","position","top","backgroundColor","isLoading","sorting","paging","selection","draggable","selectionProps","rowStyle","isTreeExpanded","localization","body","editRow","deleteText","actions","icon","ArrowBackIcon","iconProps","tooltip","onClick","AutoAwesomeMotionIcon","event","text","axios","post","headers","res","index_variable","index_partent","item_key","color_type","childRows","background","hidden","components","Row","onDoubleClick","onDragStart","onDragEnter","onDragEnd","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.19356507.chunk.js","sourcesContent":["import React, { forwardRef } from \"react\";\r\n\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\n\r\n//import cross from './cross.png';\r\n\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  //cross :forwardRef((props, ref) => <Edit {...props} ref={ref} />)\r\n};\r\n\r\nexport default tableIcons;","const keyword_highlight = [\r\n    \"ALL\", \"AND\", \"AS\", \"ASC\", \r\n    \"APPROXIMATE\", \"AVG\", \"BETWEEN\", \r\n    \"BY\", \"CACHE\", \"CAST\", \"COUNT\", \"DESC\", \r\n    \"DISTINCT\", \"FALSE\", \"FIRST\", \"LAST\", \"FROM\", \"FULL\", \"GROUP\", \"HAVING\", \"IF\", \"IN\", \"INNER\", \"INSERT\", \r\n    \"INTO\", \"IS\", \"JOIN\", \"LEFT\", \"LIMIT\", \"MAX\", \"MIN\", \"NOT\", \"NULL\", \"ON\", \"OR\", \"OVERWRITE\", \"LIKE\",\r\n     \"RLIKE\", \"UPPER\", \"LOWER\", \"REGEXP\", \"ORDER\", \"OUTER\", \"RIGHT\", \"SELECT\", \"SEMI\", \"STRING\", \"SUM\", \r\n     \"TABLE\", \"TIMESTAMP\", \"TRUE\", \"UNCACHE\", \"UNION\", \"WHERE\", \"INTERSECT\", \"EXCEPT\", \"SUBSTR\", \"SUBSTRING\", \r\n     \"SQRT\", \"ABS\",\"CAST\",\"WITH\",\"CROSS\",\"CONCAT\",\"THEN\",\"WHEN\",\"NVL\",\"CASE\",\"ELSE\",\"END\",\"COALESCE\"\r\n]\r\n\r\nexport default keyword_highlight","import MaterialTable,{MTableBodyRow,MTableEditField,MTableEditRow} from \"@material-table/core\";\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n//import { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport tableIcons from \"./MaterialTableIcons.js\";\r\nimport keyword_highlight from \"./keyword_highlight.js\";\r\nimport React ,{ useState,useRef  } from 'react';\r\nimport './App.scss';\r\nimport AutoAwesomeMotionIcon from '@mui/icons-material/AutoAwesomeMotion';\r\nimport useUndo from 'use-undo';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBackOutlined';\r\n// import CancelRoundedIcon from '@mui/icons-material/CancelRounded';\r\n// import FormControl from '@mui/material/FormControl';\r\nimport CancelOutlinedIcon from '@mui/icons-material/CancelOutlined';\r\nimport CheckCircleOutlineRoundedIcon from '@mui/icons-material/CheckCircleOutlineRounded';\r\n// import CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded';\r\nimport AddCircleOutlineRoundedIcon from '@mui/icons-material/AddCircleOutlineRounded';\r\n// import AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport CallSplitRoundedIcon from '@mui/icons-material/CallSplitRounded';\r\nimport RemoveCircleOutlineRoundedIcon from '@mui/icons-material/RemoveCircleOutlineRounded';\r\n// import RemoveCircleRoundedIcon from '@mui/icons-material/RemoveCircleRounded';\r\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\r\n// import DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Tab from \"@material-ui/core/TextField\";\r\nimport Tabs from \"@material-ui/core/TextField\";\r\nimport * as JSZip from 'jszip';\r\nimport { saveAs } from 'file-saver';\r\n\r\n\r\n// import Box from '@material-ui/core/Box';\r\n// import Button from '@material-ui/core/Button';\r\n// import * as XLSX from 'xlsx/xlsx.mjs';\r\n// import InputBase from '@mui/material/InputBase';\r\nimport {zip} from 'pythonic';\r\nimport Highlighter from \"react-highlight-words\";\r\nimport axios from 'axios';\r\nimport { uniqueNamesGenerator, adjectives, colors, animals } from 'unique-names-generator';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import SyntaxHighlighter from 'react-syntax-highlighter';\r\n// import { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n//import { sql } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n// const parser = new SparkSQL();\r\n\r\n// const useStyles = makeStyles({\r\n//   colHeader: {\r\n//     color: \"red\",\r\n//     \"&:hover\": {\r\n//       color: \"blue\"\r\n//     }\r\n//   }\r\n// });\r\n\r\n//import reportWebVitals from './reportWebVitals';\r\n\r\n//import { CsvBuilder } from 'filefy';\r\n\r\n//TODO:\r\n//Add CircularPogress for row editining\r\n\r\n// const tableRef: RefObject = createRef();\r\n\r\n// // Call this whenever you need editing to be reset\r\n// if (tableRef.current) tableRef.current.dataManager.changeRowEditing();\r\n\r\n\r\nconst BasicTable = () => {\r\n\r\n  // const [placeholder, setPlaceholder] = useState(0);\r\n\r\n  // const forceUpdate = () => {\r\n  //   setPlaceholder(o => o + 1);\r\n  // }\r\n\r\n  // DataManager.defaultExpanded  = true\r\n\r\n\r\n  // const useStyles = makeStyles({\r\n  //   MuiTableCell: {\r\n  //     root :{ '&.Mui-selected': {\r\n  //       backgroundColor: \"#f09628\"}\r\n  //     }\r\n  //     // \"border\": \"1px solid black\",\r\n  //     // \"color\": \"white\",\r\n  //     // \"width\": \"calc(682.5px)\",\r\n  //     // \"box-sizing\": \"border-box\",\r\n  //     // \"font-size\":\"12px\"\r\n\r\n      \r\n  //   }\r\n  // });\r\n  const [\r\n    countState,\r\n    {\r\n      set: setCount,\r\n      reset: resetCount,\r\n      undo: undoCount,\r\n      redo: redoCount,\r\n      canUndo,\r\n      canRedo,\r\n    },\r\n  ] = useUndo(0, { useCheckpoints: true });\r\n  const { present: presentCount } = countState;\r\n\r\n  \r\n  const useStyles = makeStyles({\r\n    tableRow: {\r\n      '& td': {\r\n        \"flex-basis\": \"0\",\r\n        \"box-sizing\":\"none\",\r\n                fontsize: \"12\",\r\n                padding:\"none\",\r\n                overflow : true\r\n      }\r\n    }\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  \r\n  const findChunksAtBeginningOfWords = ({\r\n    autoEscape,\r\n    caseSensitive,\r\n    sanitize,\r\n    searchWords,\r\n    textToHighlight\r\n  }) => {\r\n    const chunks = [];\r\n    const textLow = textToHighlight.toLowerCase();\r\n    // Match at the beginning of each new word\r\n    // New word start after whitespace or - (hyphen)\r\n    const sep = /[-\\s(),]+/;\r\n  \r\n    // Match at the beginning of each new word\r\n    // New word start after whitespace or - (hyphen)\r\n    const singleTextWords = textLow.split(sep);\r\n  \r\n    // It could be possible that there are multiple spaces between words\r\n    // Hence we store the index (position) of each single word with textToHighlight\r\n    let fromIndex = 0;\r\n    const singleTextWordsWithPos = singleTextWords.map(s => {\r\n      const indexInWord = textLow.indexOf(s, fromIndex);\r\n      fromIndex = indexInWord + s.length;\r\n      return {\r\n        word: s,\r\n        index: indexInWord\r\n      };\r\n    });\r\n  \r\n    // Add chunks for every searchWord\r\n    searchWords.forEach(sw => {\r\n      const swLow = sw.toLowerCase();\r\n      // Do it for every single text word\r\n      singleTextWordsWithPos.forEach(s => {\r\n        // console.log(s.word)\r\n        // if (s.word == swLow  || s.word.startsWith(swLow + '(') ) {\r\n          if (s.word == swLow )  {\r\n\r\n          // console.log(s.word)\r\n          // console.log(swLow)\r\n\r\n\r\n          const start = s.index;\r\n          const end = s.index + s.word.length;\r\n          chunks.push({\r\n            start,\r\n            end\r\n          });\r\n        }\r\n        else if (s.word.startsWith('@'))\r\n        {\r\n          const start = s.index;\r\n          const end = s.index + s.word.length;\r\n          chunks.push({\r\n            start,\r\n            end\r\n          });\r\n        }\r\n\r\n        \r\n      });\r\n\r\n  \r\n      // The complete word including whitespace should also be handled, e.g.\r\n      // searchWord='Angela Mer' should be highlighted in 'Angela Merkel'\r\n      if (textLow == swLow) {\r\n        const start = 0;\r\n        const end = swLow.length;\r\n        chunks.push({\r\n          start,\r\n          end\r\n        });\r\n      }\r\n    });\r\n  //  console.log(singleTextWordsWithPos)\r\n  // console.log(textLow)\r\n    return chunks;\r\n  };\r\nconst [isLoading, setIsLoading] = useState(false);\r\nconst [selectedRow, setSelectedRow] = useState(null);\r\n\r\nconst [forward_data,forward_action] = useState([\r\n  { id : 0,Query: \"SELECT * FROM\",BU : '',parentid:'no'},\r\n  { id : 1,Query: \"@bu_table\",BU : '',parentid:'no'},\r\n  { id : 1 ,Query: \"dsfsdfdsfdsf\",BU:'Others',parentid : 1},\r\n  { id : 2 ,Query: \"dsfsdfdsfdsf\",BU:'WTCMY',parentid : 1},\r\n  { id : 3 ,Query: \"dsfsdfdsfdsf\",BU:'WTCTH',parentid : 1},\r\n  { id : 4 ,Query: \"WHERE condition\",BU : '',parentid:'no'},\r\n  { id : 5 ,Query: \"@bu\",BU : '',parentid:'no'},\r\n  { id : 6 ,Query: \"dsfsdfdsfdsf\",BU:'WTCTW',parentid : 5},\r\n  { id : 7 ,Query: \"dsfsdfdsfdsf\",BU:'Others',parentid : 5},\r\n  { id : 8 ,Query: \"dsfsdfdsfdsf\",BU:'WTCTH',parentid : 5},\r\n]);\r\n\r\n\r\nconst [previsu_data,previous_action] = useState([\r\n  { id : 0,Query: \"SELECT * FROM\",BU : '',parentid:'no'},\r\n  { id : 1,Query: \"@bu_table\",BU : '',parentid:'no'},\r\n  { id : 2 ,Query: \"dsfsdfdsfdsf\",BU:'Others',parentid : 1},\r\n  { id : 3 ,Query: \"dsfsdfdsfdsf\",BU:'WTCMY',parentid : 1},\r\n  { id : 4 ,Query: \"dsfsdfdsfdsf\",BU:'WTCTH',parentid : 1},\r\n  { id : 5 ,Query: \"WHERE condition\",BU : '',parentid:'no'},\r\n  { id : 6 ,Query: \"@bu\",BU : '',parentid:'no'},\r\n  { id : 7 ,Query: \"dsfsdfdsfdsf\",BU:'WTCTW',parentid : 6},\r\n  { id : 8 ,Query: \"dsfsdfdsfdsf\",BU:'Others',parentid : 6},\r\n  { id : 9 ,Query: \"dsfsdfdsfdsf\",BU:'WTCTH',parentid : 6},\r\n]);\r\n\r\nconst [data, setData] = useState([\r\n  { id : 0,Query: \"SELECT * FROM\",BU : '',parentid:'no'},\r\n  { id : 1,Query: \"@bu_table\",BU : '',parentid:'no'},\r\n  { id : 2 ,Query: \"dsfsdfdsfdsf\",BU:'Others',parentid : 1},\r\n  { id : 3 ,Query: \"dsfsdfdsfdsf\",BU:'WTCMY',parentid : 1},\r\n  { id : 4 ,Query: \"dsfsdfdsfdsf\",BU:'WTCTH',parentid : 1},\r\n  { id : 5 ,Query: \"WHERE condition\",BU : '',parentid:'no'},\r\n  { id : 6 ,Query: \"@bu\",BU : '',parentid:'no'},\r\n  { id : 7 ,Query: \"dsfsdfdsfdsf\",BU:'WTCTW',parentid : 6},\r\n  { id : 8 ,Query: \"dsfsdfdsfdsf\",BU:'Others',parentid : 6},\r\n  { id : 9 ,Query: \"dsfsdfdsfdsf\",BU:'WTCTH',parentid : 6},\r\n\r\n]);\r\n\r\nlet lasttime = ''\r\n\r\nconst [columns, setColumns] = useState([\r\n  { title: \"Query\", field: \"Query\",\r\n  //filtering : false,\r\n\r\n  // customFilterAndSearch: (term, rowData) => term == rowData.name.length\r\n\r\n  // filtering: false,defaultFilter:'Others',\r\n  \r\n// isEditable: rowData => rowData.Query.startsWith('@') != true,\r\n\r\n  // editable: (columne_meta,colum_value) => colum_value.Query.startsWith('@') != true,\r\n  // cellStyle: {\r\n  //   \"color\": \"green\",\r\n  //   \"width\": \"calc(682.5px)\",\r\n  //   \"box-sizing\": \"border-box\"},\r\n    editComponent: props => {\r\n      let display = ''\r\n      // const textareaRef = useRef()\r\n      // const cursorPosition = 0\r\n      if (props.value.includes('@')){display = props.value.replace('@','')}\r\n      else {display = props.value}\r\n      return(\r\n      // <FormControl  {...props} margin = \"none\" size=\"small\" fullWidth = \"false\" style={{heighr:\"50%\"}}>\r\n      // <TableCell size =\"small\" style={{\"border-bottom\": \"none\"}} >\r\n            //   <TableCell size =\"small\" sx={{height:\"12px\",padding:\"none\",boxSizing: \"none\",stickyHeader:'true'\r\n            // }} >\r\n \r\n    <TextField\r\n    {...props}\r\n    padding = 'none'\r\n    InputProps={{ style: \r\n      { fontSize: '12px',\r\n                 } }}\r\n    \r\n    //type=\"numeric\"\r\n      //autoFocus=\"autofocus\"\r\n      size = \"small\"\r\n      //autofocus = 'false'\r\n      // sx={{padding : \"6px 16px 6px 16px\"}}\r\n      multiline={true}\r\n      Margin = \"nomral\"\r\n      // style = {{'font-size': '6px'}}\r\n      fullWidth={true}\r\n\r\n      value={display}\r\n      // onBlur={() => textareaRef.current.setSelectionRange(cursorPosition, cursorPosition)}\r\n\r\n      //defaultValue={display}\r\n      autofocus = {true}\r\n      // isFocused = {false}\r\n      // currentValue = {display}\r\n      \r\n     // onKeyDown={e => e.tar\r\n      //onKeyDown={console.log(myTableDiv)}\r\n      onKeyUp={(e) => {\r\n        if (e.keyCode == 9)\r\n        {        \r\n        e.target.setSelectionRange(lasttime.length,lasttime.length)}}\r\n      }\r\n\r\n\r\n      onKeyDown={e => \r\n        \r\n        {let start = e.target.selectionStart\r\n         let end = e.target.selectionEnd\r\n         console.log(e.target)\r\n          if (e.keyCode == 9)\r\n\r\n          {lasttime = e.target.value.slice(0,e.target.selectionStart) +\"    \"\r\n            props.onChange(e.target.value.slice(0,e.target.selectionStart) +\"    \"+ e.target.value.slice(e.target.selectionStart,e.target.value.length)) \r\n          e.target.setSelectionRange(1,1);\r\n          console.log(lasttime)\r\n          e.preventDefault()\r\n        }\r\n        // e.selectionStart = e.selectionEnd\r\n        // e.selectionEnd = start + 1\r\n          // let start = e.target.selectionStart\r\n          // let end = e.target.selectionEnd\r\n        // props.onChange(e.keyCode == 9 ? \r\n        //   e.target.value.slice(0,e.target.selectionStart) +\"    \"+ e.target.value.slice(e.target.selectionStart,e.target.value.length) \r\n        // // e.target.value.slice(0,e.target.selectionStart) +\"    \"+ e.target.value.slice(e.target.selectionStart,e.target.value.length) \r\n        // :\r\n        // e.target.value\r\n        // );\r\n        // let end = e.target.selectionEnd\r\n        // console.log(e.target.selectionEnd)\r\n\r\n\r\n        // e.target.selectionStart = end\r\n        // e.keyCode == 9 ? e.preventDefault() : e.cancelable = true\r\n\r\n        //e.target.setSelectionRange(start,end)\r\n\r\n        // e.keyCode == 9 ? e.preventDefault() : e.cancelable = true\r\n        // e.target.setSelectionRange(e.target.selectionStart,e.target.selectionEnd)    \r\n\r\n\r\n        //console.log(e.target.setSelectionRange)\r\n        // e.focus()\r\n        // e.target.setSelectionRange(0, 1)    \r\n\r\n        // var start = e.selectionStart;\r\n        // var end = e.selectionEnd;\r\n\r\n        // e.selectionStart = e.selectionEnd = end + 1;\r\n\r\n\r\n\r\n       \r\n          // e.target.setSelectionRange(e.target.selectionEnd,e.target.selectionEnd)\r\n        // e.keyCode == 9 ? e.preventDefault() : e.cancelable = true\r\n\r\n        // e.target.selectionStart = 0 \r\n        // e.target.selectionEnd = 0\r\n    \r\n        //console.log(textareaRef)\r\n        //textareaRef.current.setSelectionRange(e.target.selectionStart, e.target.selectionEnd)\r\n      \r\n\r\n      // e.preventDefault();preventDefault\r\n      //e.stopImmediatePropagation();\r\n      // e.key == 'Tab' ? e.target.selectionEnd = e.target.selectionStart+100 : e.cancelable = true\r\n\r\n\r\n\r\n\r\n      //e.target.selectionStart = 0;\r\n\r\n\r\n    }\r\n   }\r\n   onFocus={(e) => {\r\n     'none'\r\n    // e.target.setSelectionRange(10,1)    \r\n    //  console.log(1)\r\n  }}\r\n      \r\n      onChange={e => {props.onChange(e.target.value);      \r\n      }}\r\n      \r\n    /> \r\n    \r\n      // </TableCell >\r\n\r\n      )},\r\n      render : rowData => {\r\n      return (\r\n    //     <SyntaxHighlighter language=\"sql\" style={docco} showLineNumbers ={true}>\r\n    //   {rowData.Query}\r\n    // </SyntaxHighlighter>\r\n        <Highlighter\r\n        autoEscape = {true}\r\n        className = {\"modify\"}\r\n          searchWords={keyword_highlight}\r\n          textToHighlight = {rowData.Query}\r\n          findChunks={findChunksAtBeginningOfWords}\r\n          highlightStyle={\r\n            {\"color\": rowData.Query.startsWith('@') ? '#f2d273' : '#32CD32',\r\n            \"background-color\": 'transparent' ,\r\n            // 'display': 'normal',\r\n            //\"white-space\": \"pre-wrap\",\r\n            'font-size' :'12px',\r\n            // autoEscape:true,\r\n            //\"text-indent\":\"\",\r\n            \"font-weight\": \"900\",\r\n            \"text-transform\": \"uppercase\",\r\n            // 'max-width':'20pt',\r\n            //'word-wrap': 'break-word'\r\n\r\n              }}\r\n          unhighlightStyle={\r\n            { //\"background-color\": 'transparent' ,\r\n            //'word-wrap': 'break-word',\r\n            //\"white-space\": \"pre\",\r\n            //'display': 'inline-block',\r\n            'font-size' :'12px',\r\n            //'display':'block',\r\n            // \"white-space\": \"pre\",\r\n            // autoEscape:true,\r\n            //\"text-indent\":\"\",\r\n            //\"font-weight\": \"900\",\r\n            //\"text-transform\": \"uppercase\"\r\n              // autoEscape : true\r\n               //\"white-space\": \"normal\",\r\n\r\n            // \"white-space\": \"normal\",\r\n          }}\r\n\r\n        />\r\n      );\r\n    }\r\n\r\n\r\n  },\r\n  { title: \"BU\", field: \"BU\"   \r\n  ,textAlign: \"centre\",\r\n  // filtering : true,\r\n  //searchable :false,\r\n  editable: (column_meta,row_value) => row_value.parentid != 'no',\r\n  // customFilterAndSearch: (term, rowData) => (rowData.BU).indexOf(term) != -1 || rowData.parentid == 'no' ,\r\n  // filterComponent: ({ columnDef, onFilterChanged }) => (\r\n  //   <input\r\n  //   placeholder=\"custom\"\r\n  //   onChange={(e) => {\r\n  //     // Calling the onFilterChanged with the current tableId and the new value\r\n  //     onFilterChanged(columnDef.tableData.id, e.target.value);\r\n  //     console.log(columnDef)\r\n  //     console.log(e.target.value)\r\n  //   }}\r\n  // />\r\n  //   // <input\r\n  //   //   placeholder=\"custom\"\r\n  //   //   onChange={(e) => {\r\n  //   //     // Calling the onFilterChanged with the current tableId and the new value\r\n  //   //     onFilterChanged(columnDef.tableData.id, e.target.value);\r\n  //   //   }}\r\n  //   // />\r\n  // ),\r\n  // customFilterAndSearch: (term, rowData,test) => {\r\n  //   let all_data = [...data]\r\n  //   console.log(test2)\r\n  //   if (rowData.parentid == 'no'){return true}\r\n  //   else if (rowData.BU == term[0]){return true}\r\n  //   else{return null}\r\n  //   // console.log(term[0])\r\n  // },\r\n  \r\n  lookup: {\r\n          None:'',\r\n          Others:\"Others\",\r\n          FTRTH:'FTRHK',\r\n          PNSHK:'PNSHK',\r\n          WTCHK:'WTCHK',\r\n          WTCID:\"WTCID\",\r\n          WTCPH:\"WTCPH\",\r\n          WWHK:\"WWHK\",\r\n          WTCTW:\"WTCTW\",\r\n          WTCMY:\"WTCMY\",\r\n          WTCTH:\"WTCTH\",\r\n          WTCSG:\"WTCSG\"\r\n\r\n        }\r\n},\r\n\r\n]);\r\n\r\n\r\n// const handleDeleteRows = (event, rowData) => {\r\n\r\n  \r\n//   //isLoading = true\r\n//   // let dataUpdate = [...data];\r\n//   // let row_table = [...data];\r\n//   // let range = [...Array(row_table.length).keys()];\r\n//   // let target_id = newValue.id\r\n//   // let pass_index = ''\r\n  \r\n//   // for (const[first , second] of zip(row_table , range))\r\n//   //   if (first.id == target_id)\r\n//   //   {pass_index = second ;\r\n//   //     break\r\n//   //   }\r\n    \r\n//   // console.log('test')\r\n//   // console.log(pass_index)\r\n\r\n//   rowData = [rowData]\r\n//   let _data = [...data];\r\n//   console.log(rowData)\r\n//   rowData.forEach(rd => {\r\n//     _data = _data.filter(t => t.id !== rd.id);\r\n//   });\r\n//   let new_data = _data\r\n//   if (rowData[0].parentid != 'no'){console.log('pass'); setData(_data);}\r\n//   else {new_data.forEach(rd => {\r\n//     _data = _data.filter(t => t.parentid !== rowData[0].id)\r\n//   }); setData(_data);\r\n// } \r\n// };\r\n\r\n//TODO: wtcmy missing\r\n//TODO: % as child data recongiztion\r\nconst ExportOption = () => {\r\n  let bu_list_use = ['ftrhk','pnshk','wtchk','wtcid','wtcph','wwhk','wtctw','wtcmy','wtcth','wtcsg']\r\n  let bu_list = []\r\n  var export_data = [...data]\r\n  let parent_data = []\r\n  var child_data = []\r\n  let export_json = {}\r\n  let counter = 0\r\n  let unqiue_child = []\r\n  let unqiue_child_list = []\r\n  var temp_query = '.'\r\n\r\n  //export the master file\r\n  var test = ExportMaster('install')\r\n\r\n  return \r\n// console.log(export_data)\r\n\r\n//   for (let low_bu in bu_list_use)\r\n//   {bu_list.push(bu_list_use[low_bu].toUpperCase())}\r\n\r\n//   // seperated export_data into two type\r\n//   for (let data_use in export_data)\r\n//   if (export_data[data_use].parentid == 'no')\r\n//   {parent_data.push(export_data[data_use])}\r\n//   else \r\n//   {  \r\n//     child_data.push(export_data[data_use])}\r\n\r\n\r\n//   let temp_child_data = child_data\r\n//   let complete_bu = bu_list\r\n\r\n\r\n//   // get all bu child data\r\n//   for (let child in child_data)\r\n//   {unqiue_child.push(child_data[child].parentid)}\r\n\r\n//   // only extract unique child data\r\n//   unqiue_child = [... new Set(unqiue_child)]  \r\n//   // console.log(unqiue_child)\r\n\r\n//   // add all remaining bu in child data\r\n//   for (var new_id in unqiue_child)\r\n//       {\r\n//       temp_query = temp_child_data.filter(n => n.parentid == unqiue_child[new_id] && n.BU == 'Others')\r\n//       // console.log(temp_child_data)\r\n//       temp_query = temp_query[0]\r\n//       let temp_list = child_data.filter(n => n.parentid == unqiue_child[new_id])\r\n//       temp_list.forEach(element => {\r\n//         complete_bu =  complete_bu.filter(n => n !== element.BU)\r\n//         // console.log(complete_bu)\r\n//         // console.log(temp_query)\r\n        \r\n//        })\r\n//       for (var bu_child in complete_bu)\r\n//       {\r\n//        let new_query = {}\r\n//        new_query['id'] = temp_query['id']\r\n//        new_query['Query'] = temp_query['Query']\r\n//        new_query['BU'] =complete_bu[bu_child]\r\n//        new_query['parentid'] = temp_query['parentid']\r\n\r\n//        child_data.push(new_query)\r\n\r\n//       }\r\n//     }\r\n//     child_data = child_data.filter(n => n.BU != 'Others')\r\n//     console.log(child_data)\r\n  \r\n\r\n//   for (var bu in bu_list )\r\n//   {export_json[bu_list[bu]] = []\r\n//     for (var p_query in parent_data)\r\n//     {\r\n//       if (parent_data[p_query].Query.includes('@') == true)\r\n//       {//create id only \r\n//         // console.log(parent_data[p_query].Query.includes('%'))\r\n//         for (var c_query in child_data )\r\n//         {if(child_data[c_query].parentid == parent_data[p_query].id && child_data[c_query].BU == bu_list[bu])\r\n//         {\r\n//         export_json[bu_list[bu]].push(child_data[c_query].Query)\r\n//         }}\r\n//       }\r\n//       else\r\n//       {export_json[bu_list[bu]].push(parent_data[p_query].Query)}\r\n\r\n    \r\n\r\n    \r\n//   }\r\n// }\r\n// console.log(export_json)\r\n\r\n  }\r\n\r\n  const ExportMaster = (job_type) => {\r\n    let master_export = [...data]\r\n    let template_query = []\r\n    let template_json = {}\r\n    let bu_list_use = ['ftrhk','pnshk','wtchk','wtcid','wtcph','wwhk','wtctw','wtcmy','wtcth','wtcsg']\r\n    let bu_lister = []\r\n    let temp_no_head = ''\r\n    let loop_check = 'nothing'\r\n    let other_check = 'nothing'\r\n\r\n    for (let low_bu in bu_list_use)\r\n  {bu_lister.push(bu_list_use[low_bu].toUpperCase())}\r\n\r\n    \r\n    //create the teamplate_query\r\n    for (var temp in master_export)\r\n    {if (master_export[temp].parentid == 'no')\r\n    {template_query.push(master_export[temp].Query)}\r\n  }\r\n    //create the bu-specifci variable\r\n    for (var temp in master_export)\r\n    {if (master_export[temp].Query.includes('@') == true)\r\n    {var skip_firster = master_export[temp].Query.substring(1)\r\n     template_json[skip_firster] = []\r\n    for (var temp_sub in master_export)\r\n    {\r\n      if (master_export[temp_sub].parentid == master_export[temp].id)\r\n      {\r\n        template_json[skip_firster].push({'BU':master_export[temp_sub].BU,\r\n                                          'Query':master_export[temp_sub].Query})\r\n\r\n      }\r\n      \r\n    \r\n\r\n    }\r\n  \r\n  }\r\n  \r\n  }\r\n\r\n  template_json['@bu_query'] = {}\r\n  for (let bu_name in bu_lister)\r\n    {template_json['@bu_query'][bu_lister[bu_name]] = [];\r\n    \r\n    for (let sub_query in template_query)\r\n      {loop_check = 'nothing'\r\n       other_check = 'nothing'\r\n        if (template_query[sub_query].includes('@') == true)\r\n        {temp_no_head = template_query[sub_query].substring(1)\r\n          for (let check_check in template_json[temp_no_head])\r\n            {if (template_json[temp_no_head][check_check].BU == bu_lister[bu_name])\r\n                {loop_check = template_json[temp_no_head][check_check].Query}\r\n\r\n             {if (template_json[temp_no_head][check_check].BU == 'Others')\r\n                {other_check = template_json[temp_no_head][check_check].Query}}\r\n            }\r\n              \r\n            if (loop_check == 'nothing')\r\n            {template_json['@bu_query'][bu_lister[bu_name]].push(other_check)}\r\n            else\r\n            {{template_json['@bu_query'][bu_lister[bu_name]].push(loop_check)}}\r\n\r\n              }\r\n          else\r\n          {{template_json['@bu_query'][bu_lister[bu_name]].push(template_query[sub_query])}\r\n        \r\n        }\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  //console.log(template_json)\r\n\r\n  // export the data to json\r\n  template_json['template_query'] = template_query\r\n  //console.log(template_json)\r\n  const fileData = JSON.stringify(template_json);\r\n  if (job_type == 'bu_only') \r\n  {\r\n    var zip = new JSZip();\r\n  for (var bu_name in bu_lister)\r\n  {\r\n  \r\n  var temp_file = template_json['@bu_query'][bu_lister[bu_name]]\r\n  //temp_file = temp_file.toString()\r\n  temp_file = temp_file.join(\"\\r\\n\")\r\n  var zip_file = zip.file(bu_list_use[bu_name] + '.sql' , temp_file)\r\n  //var zip_blob = new Blob([fileData], {type: \"text/plain\"});\r\n\r\n  // var blob = new Blob([temp_file], {type: \"text/plain\"});\r\n  // var url = URL.createObjectURL(blob);\r\n  // zip.generateAsync({type:\"blob\"}).then(function(content) {\r\n  //   // see FileSaver.js\r\n  //   saveAs(content, \"example.zip\");\r\n  // })\r\n  // var blob = new Blob([zip]);\r\n  // var url = URL.createObjectURL(blob);\r\n  // var link = document.createElement('a');\r\n  // link.download = 'Master.zip';\r\n  // link.href = url;\r\n  // link.click()\r\n  \r\n\r\n  // var link = document.createElement('a');\r\n  // link.download = bu_list_use[bu_name] + '.txt';\r\n  // link.href = url;\r\n  // link.click()\r\n  }\r\n  \r\n  zip.generateAsync({type:\"blob\"})\r\n  .then(function (content) {\r\n      // see FileSaver.js\r\n      saveAs(content, \"sql_query.zip\");\r\n  });\r\n  \r\n\r\n  // zip.generateAsync({type:\"blob\"}).then(function(content) {\r\n  //   // see FileSaver.jsc\r\n  //   saveAs(content, \"sql_query.zip\");\r\n  // })\r\n}\r\n  else if (job_type == 'validate')\r\n  {\r\n    return fileData\r\n }\r\n  else{\r\n    var blob = new Blob([fileData], {type: \"text/plain\"});\r\n  var url = URL.createObjectURL(blob);\r\n  var link = document.createElement('a');\r\n  link.download = 'Master.json';\r\n  link.href = url;\r\n  link.click()\r\n    \r\n    \r\n    \r\n    }\r\n\r\n}\r\n// var temp_file = template_json['@bu_query'][bu_list_use[bu_name]]\r\n//   var blob = new Blob([fileData], {type: \"text/plain\"});\r\n//   var url = URL.createObjectURL(blob);\r\n//   var link = document.createElement('a');\r\n//   link.download = 'master.json';\r\n//   link.href = url;\r\n//   link.click()\r\n    \r\n    \r\n    \r\n    \r\n  //   }\r\n  // }\r\n  // console.log(export_json)\r\n  // //console.log(counter)\r\n  const Bu_only = () => {\r\n    const js_return = ExportMaster('bu_only')\r\n  }\r\n\r\n    \r\n\r\n\r\n\r\n\r\n  const QueryChecker = (event) => {\r\n\r\n\r\n    const sqlurl = \"https://extendsclass.com/sql-syntax-tester\"\r\n    const js_return = JSON.parse(ExportMaster('validate'))\r\n    let text = js_return['@bu_query']['WTCTW'].join(' ')\r\n\r\n\r\n    axios.post(sqlurl, text, {\r\n      headers: { 'Content-Type': 'text/plain',\r\n    }\r\n    }).then(res => {\r\n      console.log(res.data);\r\n    });\r\n    event.preventDefault();\r\n  };\r\n\r\nconst bu_specific = (e , rowData) => {\r\n    // var tempMyObj = Object.assign([], data);\r\n    previous_action([...data])\r\n    let _data = [...data]\r\n    let mum_id = rowData.id\r\n    let random_id = Math.floor(Math.random() * 1000000)\r\n    let id_list = []\r\n    let obj = undefined\r\n    let temp_str = ''\r\n\r\n    const randomName = uniqueNamesGenerator({ dictionaries: [adjectives, colors, animals] });\r\n\r\n    while (obj != undefined){\r\n      random_id = Math.floor(Math.random() * 1000000);\r\n      obj = id_list.find(element => element == random_id);\r\n      if (obj == undefined){\r\n        obj = id_list.find(element => element == random_id + 1) ;\r\n        \r\n      }\r\n    }\r\n    _data.push({ id : random_id ,Query: rowData.Query, BU:'Others',parentid : mum_id})\r\n    for (let data_number in _data)\r\n    {temp_str = _data[data_number].Query\r\n      if (_data[data_number].id == mum_id &  _data[data_number].Query.includes('@') != true)\r\n      {_data[data_number].Query = '@' + randomName}\r\n\r\n    }\r\n    //rowData = [rowData]\r\n    //console.log(rowData)\r\n\r\n    //{ id : 8 ,Query: \"dsfsdfdsfdsf\",BU:'WTCTH',parentid : 5},\r\n\r\n    setTimeout(() => {\r\n      setData(_data);\r\n      first_set(false);\r\n      // setIsLoading(false)\r\n      \r\n    }, 500)\r\n}\r\n  \r\n\r\nconst handleAddRows = (event , rowData) => {\r\n  previous_action([...data])\r\n  rowData = [rowData]\r\n  // TODO:\r\n  // DONE , rmb to change the text trasnform of parentid to 'no'\r\n  // setIsLoading(true)\r\n  if (rowData.length != 1){return(alert('you can\"t select more than one row when u add new row'));}\r\n  let _data = [...data];\r\n  let range = [...Array(_data.length).keys()];\r\n  let random_id = Math.floor(Math.random() * 1000000);\r\n  let index_variable = rowData[0].id\r\n  let index_partent = rowData[0].parentid\r\n  let id_list = []\r\n  let obj = undefined\r\n  \r\n  for (const item_key in _data )\r\n  {id_list.push(_data[item_key].id)}\r\n\r\n//   console.time('Timer name');\r\n//   console.log('a')\r\n// //do critical time stuff\r\n// console.timeEnd('Timer name');\r\nconsole.log('b')\r\n  while (obj != undefined){\r\n    random_id = Math.floor(Math.random() * 1000000);\r\n    obj = id_list.find(element => element == random_id);\r\n    if (obj == undefined){\r\n      obj = id_list.find(element => element == random_id + 1) ;\r\n      \r\n    }\r\n  }\r\n//   console.time('Timer name');\r\n//   console.log('c')\r\n// //do critical time stuff\r\n// console.timeEnd('Timer name');\r\n\r\nfor (const[first , second] of zip(_data , range))\r\n    \r\n      if (first.id == index_variable)\r\n      { \r\n        //console.log(rowData[0].parentid)\r\n        //console.log(rowData)\r\n        \r\n\r\n        if (rowData[0].parentid != 'no')\r\n      { \r\n        _data.splice( second + 1 ,0,\r\n          \r\n          { \r\n        id : random_id,\r\n        Query: '-',\r\n        BU:'-',\r\n        parentid : index_partent});\r\n      }\r\n       else\r\n       {  \r\n        // console.log(rowData[0].parentid)\r\n\r\n         _data.splice( second + 1 ,0,\r\n        { \r\n        id :random_id,\r\n        Query: '-',\r\n        BU:'',\r\n        parentid : \"no\"\r\n        }\r\n        // ,\r\n        // {\r\n        //   id : random_id + 1,\r\n        //   Query: 'NULL',\r\n        //   BU:'NULL',\r\n        //   parentid : random_id\r\n        //   }\r\n        \r\n        );\r\n      }\r\n    break}\r\n \r\n  setTimeout(() => {\r\n    setData(_data);\r\n    first_set(false);\r\n    // setIsLoading(false)\r\n    \r\n  }, 500)\r\n};\r\n\r\nconst DrageState = {\r\n  row: -1,\r\n  dropIndex: -1 // drag target\r\n};\r\n\r\nconst offsetIndex = (from, to, arr = []) => {\r\n  if (from < to) {\r\n    console.log('to higher')\r\n    let start = arr.slice(0, from),\r\n      between = arr.slice(from + 1, to + 1),\r\n      end = arr.slice(to + 1);\r\n      //console.log(between)\r\n      //console.log(arr[from])\r\n    // console.log(start)\r\n    // console.log(arr[from].parentid)\r\n    let return_list =  [...start, ...between, arr[from], ...end]\r\n    if (arr[from].parentid != 'no'){return return_list}\r\n    else {\r\n      let reload_data = []\r\n      let temp_list = []\r\n      let range = [...Array(between.length).keys()];\r\n\r\n      for (const[first, second] of zip(between , range))\r\n      if (first.parentid == arr[from].id)\r\n      {\r\n        reload_data.push(second);\r\n        temp_list.push(first)\r\n      };\r\n      \r\n    if (reload_data.length == 0)\r\n    { return return_list} \r\n    else{\r\n      console.log(reload_data)\r\n      let min_math = Math.min(reload_data)\r\n      let new_between = between.splice(min_math,between.length-1)\r\n      console.log(new_between)\r\n      console.log(between)\r\n      console.log(start)\r\n      console.log(arr[0,from])\r\n      //console.log(new_between)\r\n      let new_return = [...start, ...between, arr[from],...temp_list ,...end]\r\n      //console.log(new_between)\r\n      //console.log(between)\r\n      console.log(new_return)\r\n      return new_return\r\n    }\r\n      }\r\n    }\r\n  if (from > to) {\r\n    let start = arr.slice(0, to),\r\n      between = arr.slice(to, from),\r\n      end = arr.slice(from + 1);\r\n      //console.log()\r\n    return [...start, arr[from], ...between, ...end];\r\n  }\r\n  return arr;\r\n};\r\nconst reOrderRow = (from, to) => {\r\n  //console.log(from)\r\n  //console.log(to)\r\n\r\n  //TODO:\r\n  previous_action([...data])\r\n  let _data = data;\r\n  //console.log(from)\r\n  //console.log(_data[from].parentid)\r\n  if (_data[from].parentid == 'no' & _data[to].parentid=='no'){}\r\n  else {if(_data[from].parentid != 'no' & _data[to].parentid != 'no')\r\n  {if(_data[from].parentid == _data[to].parentid){} else{return}}\r\n  else{return}}\r\n  \r\n  let newtableData = offsetIndex(from, to, _data);\r\n  //console.log(newtableData)\r\n  //Update react state\r\n\r\n  setData(newtableData);\r\n  first_set(false);\r\n\r\n  //console.log(newtableData)\r\n  //console.log(data)\r\n\r\n};\r\n\r\n//upload file function \r\n//const[colDefs,setColDefs] = useState()\r\n//const[dataDefs,setDataDefs] = useState()\r\n\r\nconst importExcel =(e) =>{\r\n  //previous_action([...data])\r\n  //console.log(e.target.files)\r\n  const file = e.target.files[0]\r\n  console.log(file.name)\r\n  //var mydata = JSON.parse(file);\r\n\r\n  //alert(mydata[0].name);\r\n  //alert(mydata[0].age);\r\n  //alert(mydata[1].name);\r\n  //alert(mydata[1].age); \r\n\r\n  //return \r\n\r\n  const reader = new FileReader()\r\n  if (file.name.includes('.json'))\r\n  {\r\n  reader.onload=(e)=>{\r\n    console.log(reader.name)\r\n    var jsonObj = JSON.parse(e.target.result);\r\n    //return \r\n    var query_list = [] \r\n    for (var temp_que in jsonObj.template_query)\r\n    {\r\n      var random_id = Math.floor(Math.random() * 1000000); \r\n      if (jsonObj.template_query[temp_que].includes('@') != true)\r\n      {query_list.push(\r\n        { id : random_id,\r\n          Query: jsonObj.template_query[temp_que],\r\n          BU : '',\r\n          parentid:'no'}\r\n      )\r\n      }\r\n      else \r\n      {var skip_first = jsonObj.template_query[temp_que].substring(1)\r\n        query_list.push(\r\n          { id : random_id,\r\n            Query: jsonObj.template_query[temp_que],\r\n            BU : '',\r\n            parentid:'no'}\r\n        )\r\n        for (var sub_data in jsonObj[skip_first])\r\n        {query_list.push(\r\n          {\r\n          id : random_id + Math.floor(Math.random() * 100),\r\n          Query:jsonObj[skip_first][sub_data].Query,\r\n          BU : jsonObj[skip_first][sub_data].BU,\r\n          parentid : random_id\r\n\r\n          }\r\n        )\r\n        }\r\n      }\r\n \r\n      }\r\n      setData(query_list)\r\n    }\r\n  }\r\n  else if (file.name.includes('.txt'))\r\n  {  \r\n    reader.onload=(e)=>{\r\n      let clean_list = []\r\n      let result_list = e.target.result.split(/\\r?\\n/)\r\n\r\n      for (let iter in result_list)\r\n      {\r\n      var random_id = Math.floor(Math.random() * 1000000)\r\n      // if (result_list[iter].replace(/\\s+/g,'') != '' && result_list[iter].startsWith('--')!= true)\r\n      if (result_list[iter].replace(/\\s+/g,'') != '')\r\n      {clean_list.push(\r\n        { id : random_id,\r\n          Query: result_list[iter],\r\n          BU : '',\r\n          parentid:'no'}\r\n      )}\r\n\r\n      }\r\n      setData(clean_list)\r\n    }\r\n\r\n    }\r\n  else \r\n  {alert ('incorrect file type')}\r\n  \r\nreader.readAsBinaryString(file)\r\n}\r\n\r\n// convert csv to json\r\nconst convertToJson = (csv) => {\r\n  var lines = csv.split(\"\\n\");\r\n\r\n  var result = [];\r\n\r\n  var headers = lines[0].split(\",\");\r\n\r\n  for (var i = 1; i < lines.length; i++) {\r\n    var obj = {};\r\n    var currentline = lines[i].split(\",\");\r\n    //console.log(currentline)\r\n\r\n    for (var j = 0; j < headers.length; j++) {\r\n      obj[headers[j]] = currentline[j];\r\n    }\r\n\r\n    result.push(obj);\r\n  }\r\n\r\n  //return result; //JavaScript object\r\n  return (result) //JSON\r\n};\r\n\r\n// const onDragEnd = (result) => {\r\n//   const { destination, source } = result;\r\n//   if (!destination) return;\r\n//   if (source.index !== destination.index) {\r\n//     let copyArray = [...data];\r\n//     let temp = data[source.index];\r\n//     copyArray.splice(source.index, 1);\r\n//     copyArray.splice(destination.index, 0, temp);\r\n//     setData(copyArray);\r\n//   }\r\n// };\r\nconst [first_disable,first_set] = useState(true)\r\n\r\nconst lastpage = () => {\r\n  \r\n  setData(previsu_data)\r\n  first_set(true)\r\n  }\r\n//   this.setState({ visible: true })\r\n//   console.log(previsu_data)\r\n//   console.log('last_page')\r\n\r\n\r\n\r\n// const Query_Version = () = {\r\n\r\n\r\n// }\r\n\r\n\r\n\r\nconst options_list = [\r\n    '',\r\n    \"Others\",\r\n    'FTRHK',\r\n    'PNSHK',\r\n    'WTCHK',\r\n    \"WTCID\",\r\n    \"WTCPH\",\r\n    \"WWHK\",\r\n    \"WTCTW\",\r\n    \"WTCMY\",\r\n    \"WTCTH\",\r\n    \"WTCSG\"\r\n\r\n  ]\r\n\r\n\r\n\r\n  return (\r\n    <div className = \"OCTAVIA\">\r\n    <input type ='file' onChange ={importExcel}/>\r\n\r\n    {/* <Tab\r\n    value=\"one\"\r\n    label=\"New Arrivals in the Longest Text of Nonfiction that should appear in the next line\"\r\n    wrapped\r\n  />\r\n  <Tab value=\"two\" label=\"Item Two\" />\r\n  <Tab value=\"three\" label=\"Item Three\" /> */}\r\n \r\n\r\n\r\n\r\n\r\n  <MaterialTable \r\n  title=\"Query Editior\"\r\n  style={{ width: \"100%\", margin: \"0%\",fontsize :\"12px\"}}\r\n  \r\n  icons={{Edit: () => <EditOutlinedIcon  />,\r\n    //style={{ color: \"black\" }} />,\r\n          Delete: () => <RemoveCircleOutlineRoundedIcon  style={{ color: \"black\" }} />,\r\n          Check: () => <CheckCircleOutlineRoundedIcon  style = {{color :'black',\"margin-left\": \"30px\"}}/>,\r\n          Clear: () => <CancelOutlinedIcon style = {{color :'black'}} />\r\n\r\n\r\n}\r\n        }\r\n       \r\n      //   cellEditable={{\r\n      //     cellStyle: {},\r\n      //     onCellEditApproved: (newValue, oldValue, rowData, columnDef) => {\r\n      //         return new Promise((resolve, reject) => {\r\n      //             console.log('newValue: ' + newValue);\r\n      //             setTimeout(resolve, 4000);\r\n      //         });\r\n      //     }\r\n      // }}\r\n\r\n  // icons={{\r\n  //   Edit: () => <EditIcon style={{ color: \"orange\" }} />,\r\n  //   Delete: () => <DeleteIcon style={{ color: \"red\" }} />\r\n  // }}\r\n  // onTreeExpandChange = {(path,data) =>{\r\n  //   this.dataManager.changeTreeExpand(path);\r\n  //   this.setState(this.dataManager.getRenderState(), () => {\r\n  //     this.props.onTreeExpandChange &&\r\n  //       this.props.onTreeExpandChange(data, data.tableData.isTreeExpanded)\r\n  //   })}}\r\n\r\n  // const tableRef = useRef(null)\r\n\r\n  // useEffect(() => {\r\n  //       tableRef.current.dataManager.changePageSize(newPageSIze)\r\n  //  }, [])\r\n \r\n\r\n    editable = {{\r\n\r\n      // isEditable: rowData => rowData.Query.startsWith('@') != true, // only name(a) rows would be editable\r\n      isEditable: (rowData) => {try {if (rowData.Query.startsWith('@')!=true)\r\n      {return 'always'}} \r\n      catch{return}\r\n      finally{}\r\n      },\r\n     \r\n      \r\n      \r\n      \r\n      // rowData.Query != undefined,\r\n\r\n      \r\n      onRowUpdate:(newValue, oldValue) =>\r\n      new Promise((resolve, reject) => {\r\n        // previous_action([...data])\r\n        setTimeout(() => {\r\n          //console.log([...data])\r\n          // oldValue.tableData.isTreeExpanded = true\r\n          let dataUpdate = [...data];\r\n          let row_table = [...data];\r\n          let column_check = [...data];\r\n          let range = [...Array(row_table.length).keys()];\r\n          let target_id = newValue.id\r\n          let pass_index = ''\r\n          let newValue_check = newValue\r\n          let data_status = false\r\n          let data_output = dataUpdate\r\n          // console.log(row_table)\r\n          // console.log(newValue)\r\n          // console.log(newValue)\r\n\r\n          //handle same bu within one row issue\r\n          // for (let data_count in data_output)\r\n          // {if (data_output[data_count].id == oldValue.id )\r\n          //   {data_output[data_count].BU = oldValue.BU}\r\n          // }\r\n\r\n          for (let data_count in column_check)\r\n          {if (column_check[data_count].id == newValue.id )\r\n            {column_check[data_count].BU = newValue.BU}\r\n          }\r\n\r\n          // console.log(data_output)\r\n\r\n          column_check.forEach(row => {\r\n            let temp_list_array = []\r\n            let temp_list = column_check.filter(row_2 => row.id == row_2.parentid || row.id == row_2.id)\r\n            temp_list.forEach(row_temp => {\r\n              temp_list_array.push(row_temp.BU)\r\n            })\r\n\r\n            let uniqueCount = new Set(temp_list_array).size;\r\n            console.log(uniqueCount);\r\n\r\n            console.log(temp_list_array)\r\n            \r\n            if (uniqueCount == temp_list_array.length & temp_list.length  >= 1)\r\n            {console.log('ok')}\r\n            // {}\r\n            else {\r\n              console.log('issue')\r\n              // console.log(temp_list_array)\r\n              data_status = true\r\n              // console.log('issue')\r\n              // alert(\"BU can't appear more than one time in same series of row\");\r\n              // for (let data_count in data_output)\r\n              // {if (data_output[data_count].id == oldValue.id )\r\n              //   {data_output[data_count].BU = oldValue.BU}\r\n              // }\r\n    \r\n                            // alert(\"Hello! I am an alert box!!\");\r\n\r\n              // alert(\"BU can't appear more than one time in same series of row\");\r\n              // data_status = true\r\n              // alert(\"BU can't appear more than one time in same series of row\");\r\n\r\n              // alert(\"Hello! I am an alert box!!\");\r\n              // setData(dataUpdate);\r\n              //setData(dataUpdate);\r\n              // resolve()\r\n              // console.log('break')\r\n              // break;\r\n              // return false\r\n            }\r\n              //console.log('break')}\r\n           \r\n            // console.log(temp_list)\r\n            \r\n\r\n\r\n\r\n\r\n          })\r\n          \r\n          // parent.tableData.isTreeExpanded = true;\r\n\r\n          \r\n          for (const[first , second] of zip(row_table , range))\r\n            if (first.id == target_id)\r\n            {pass_index = second ;\r\n              break\r\n            }\r\n          \r\n          //console.log(oldValue)\r\n\r\n          if (oldValue.Query.startsWith('@')==true)\r\n          {newValue_check.Query = newValue.Query.replace('@','');\r\n          newValue_check.Query = '@' + newValue_check.Query}\r\n          else \r\n          {newValue_check.Query = newValue.Query.replace('@','')}\r\n\r\n            \r\n          //console.log('test')\r\n          //console.log(pass_index)\r\n\r\n\r\n\r\n          // const index = oldValue.tableData.id;\r\n          // console.log(oldValue.tableData)\r\n          // console.log(newValue)\r\n          //console.log(columnDef)\r\n            dataUpdate = dataUpdate.filter(t => t.id !== newValue.id);\r\n            dataUpdate.splice(pass_index,0,newValue_check)\r\n            if (data_status == true)\r\n            {\r\n              alert(\"BU can't appear more than one time in same series of row\");\r\n              for (let data_count in data_output)\r\n              {if (dataUpdate[data_count].id == oldValue.id )\r\n                {dataUpdate[data_count].BU = oldValue.BU}\r\n              }\r\n              }\r\n            else \r\n            {}\r\n\r\n            //console.log(data_status)\r\n          \r\n          // dataUpdate\r\n          // dataUpdate[pass_index] = newValue\r\n          //console.log(dataUpdate_use)\r\n          previous_action([...data]);\r\n          setData(dataUpdate);\r\n          first_set(false)\r\n          resolve();\r\n          console.log(dataUpdate)\r\n        }, 1000)\r\n      }),\r\n\r\n\r\n    onRowDelete:(newValue,rowData) =>\r\n        new Promise((resolve, reject) => {\r\n          setTimeout(() => {\r\n           // console.log(newValue)\r\n           // console.log(oldValue)\r\n          let rowData = [newValue];\r\n          let _data = [...data];\r\n          //console.log(newValue)\r\n      rowData.forEach(rd => {\r\n        _data = _data.filter(t => t.id !== rd.id);\r\n      });\r\n      let mum_check = [..._data]\r\n\r\n\r\n      rowData.forEach(rd => {\r\n        mum_check = mum_check.filter(t => t.parentid == rd.parentid);\r\n      });\r\n      console.log(mum_check)\r\n      let new_data = _data\r\n      //console.log(columnDef)\r\n      if (rowData[0].parentid != 'no')\r\n      {if (mum_check.length == 0)\r\n        {for (let data_sub in _data)\r\n          {if (rowData[0].parentid == _data[data_sub].id && _data[data_sub].Query.startsWith('@'))\r\n            {_data[data_sub].Query = _data[data_sub].Query.substring(1)}\r\n          \r\n          \r\n          }\r\n        }\r\n        else{\r\n          console.log('pass')}\r\n      }\r\n      //setData(_data);}\r\n      else {new_data.forEach(rd => {\r\n        _data = _data.filter(t => t.parentid !== rowData[0].id)\r\n      })}; \r\n      previous_action([...data])\r\n      setData(_data);\r\n      first_set(false);\r\n      resolve();\r\n    }, 1000)\r\n        })\r\n    }}\r\n    \r\n\r\n\r\n        \r\n  // editable = {{onRowAdd:setIsLoading(false)}}\r\n  columns={\r\n    columns\r\n  }\r\n  data={data} \r\n  parentChildData={(row, rows) => rows.find(a => a.id == row.parentid)}\r\n  // onTreeExpandChange={() => console.log('test tree expand change')}\r\n  //onTreeExpandChange={(data,isTreeExpanded) => console.log(data)}\r\n\r\n    \r\n  // icons={}\r\n  onRowClick={((evt, selectedRow) => setSelectedRow(selectedRow.tableData.id))}\r\n  options={{\r\n    // actionsCellStyle: {\r\n    //   'font-size': '12px',\r\n    // filtering: true,\r\n    //   color: 'black',\r\n    //   },\r\n    // overflowY: \"false\",\r\n    //defaultExpanded:false,\r\n    //viewColumns : true,\r\n      loadingType:'linear',\r\n      //defaultExpanded : true,\r\n    tableLayout: 'auto',\r\n    //searchAutoFocus : true,\r\n    headerSelectionProps: {\r\n      disabled : true    },\r\n    //addRowPosition: \"Last\",\r\n    //search: false,\r\n    //actionsColumnIndex: 0,\r\n    headerStyle: { position: 'sticky',top:1, backgroundColor: \"#f7f7f7\" },\r\n    isLoading: true,\r\n    sorting : false,\r\n    //grouping : true,\r\n    //minBodyHeight:500,\r\n    //maxBodyHeight:1000,\r\n    paging:false,\r\n    padding:'dense',\r\n    //editable :true,\r\n    // exportButton: {\r\n    //   csv: true,\r\n    //   pdf: false,\r\n    //   //animals :true\r\n    // },\r\n    //exportAllData : true,\r\n  //   exportCsv: (data, columns) => {const columnTitles = columns\r\n  //     .map(columnDef => columnDef.title);\r\n  \r\n  // const csvData = data.map(rowData =>\r\n  //       columns.map(columnDef => rowData[columnDef.field]),\r\n  //     );\r\n\r\n  // const builder = new CsvBuilder(`data.csv`)\r\n  //       .setColumns(columnTitles)\r\n  //       .addRows(csvData)\r\n  //       .exportFile();\r\n\r\n  // return builder;\r\n\r\n  // exportButton: {\r\n  //   csv: true,\r\n  //   pdf: true\r\n  // } ,    \r\n  //actionsColumnIndex: -1,\r\n  //toolbarButtonAlignment:\"left\",\r\n  selection : false,\r\n    draggable: true,\r\n    selectionProps: row => ({\r\n                            disabled : true,\r\n                            //checked:true,\r\n                            //hidden:true\r\n\r\n\r\n                            \r\n                          }),\r\n          rowStyle: rowData => {\r\n            //console.log(rowData)\r\n            var data = rowData.tableData.isTreeExpanded == true\r\n            //console.log(rowData)\r\n            //let styles = { transition: 'transform 300ms' };\r\n            //const levels = rowData.tableData.path.length === 1 ? 0 : rowData.tableData.path.length;\r\n            //styles = { ...styles, '--left-before': `${levels * 6}px` };\r\n            //console.log([...rowData])\r\n            //for (let temp_data in rowData)\r\n            //{console.log(rowData[temp_data])}\r\n            //{if rowData[temp_data]}\r\n            if (rowData.parentid != 'no')\r\n            {return{\r\n              backgroundColor: (selectedRow === rowData.tableData.id) ? '#EEE' : '#FFF',\r\n              backgroundColor: 'rgba(77, 93, 241, 0.08)',\r\n\r\n              //...styles,\r\n              //padding : 'dense',\r\n              // 'text-indent': '20px',\r\n              'font-size': '12px',\r\n              'white-space':'pre',\r\n\r\n              //fontWeight: 600,\r\n            }\r\n          }\r\n          else {return {\r\n            'font-size': '12px', 'white-space':'pre'\r\n        }}\r\n\r\n            // return rowData.tableData.isTreeExpanded\r\n            //   ? {\r\n            //       //...styles,\r\n            //       padding : 'dense',\r\n            //       fontWeight: 600,\r\n            //       backgroundColor: 'rgba(77, 93, 241, 0.08)'\r\n            //     }\r\n            //   : {};\r\n          }\r\n         \r\n          \r\n        \r\n                      \r\n\r\n\r\n\r\n\r\n\r\n    // rowStyle: {\r\n    //   fontSize: 8,\r\n    //   //height: 8,\r\n    //   //borderBottom: \"none\",\r\n    //   borderBottom: '2px solid white'\r\n\r\n    // },\r\n    //cellStyle : {width:200,\r\n     //           maxWidth:200},\r\n\r\n\r\n    //selectionProps: row => ({disabled: row.tableData.disabled})\r\n    \r\n    }}\r\n\r\n\r\n    localization={{ body: { editRow: { deleteText: 'You Sure?',fontSize:\"10px\"}}}}\r\n\r\n    \r\n\r\n    // localization={{\r\n    //   toolbar: {\r\n    //     exportCSVName: \"Export CSV\",\r\n    //    // exportPDFName: \"Export as pdf!!\"\r\n    //   },\r\n      \r\n    // }}\r\n    \r\n    // cellEditable={{\r\n    //   onCellEditApproved: (newValue, oldValue, rowData, columnDef) => {\r\n    //     return new Promise((resolve, reject) => {\r\n    //       const clonedData = [...data]\r\n    //      //console.log('haha')\r\n    //       console.log(clonedData)\r\n    //       console.log(newValue)\r\n    //       console.log(rowData.id)\r\n    //       console.log(columnDef.field)\r\n    //       //console.log(clonedData[rowData.id][columnDef.field])\r\n    //       clonedData[rowData.id][columnDef.field] = newValue //TODO click yes has no repsonse\r\n    //       console.log('dfdf')\r\n\r\n    //       console.log(clonedData)\r\n    //       setData(clonedData)\r\n    //       setTimeout(resolve, 4000);\r\n\r\n    //       // setTimeout(() => {\r\n    //       //   setData(clonedData);            \r\n    //       // }, 5\r\n    //       // )\r\n          \r\n    //     });\r\n    //   }\r\n    // }}\r\n    //LastPage\r\n    \r\n    actions={[\r\n      // {icon: tableIcons.Add,\r\n        {\r\n          icon: ArrowBackIcon,\r\n          iconProps: {color:  \"secondary\" },\r\n          tooltip: \"last step\",\r\n          onClick: undoCount,\r\n          //,isFreeAction:true\r\n          position : 'toolbar'  ,\r\n          disabled : first_disable == true,\r\n         \r\n        },\r\n        {\r\n          icon: AutoAwesomeMotionIcon,\r\n          iconProps: {color:  \"secondary\" },\r\n          tooltip: \"export bu query zip file\",\r\n          onClick: Bu_only,\r\n          //,isFreeAction:true\r\n          position : 'toolbar'  \r\n          // disabled : first_disable == true,\r\n         \r\n        },\r\n      {icon: tableIcons.Export,\r\n      tooltip: \"export master file\",\r\n      iconProps: { style: { fontSize: \"6px\", color: \"green\" } },\r\n        onClick: ExportOption,\r\n        //,isFreeAction:true\r\n        position : 'toolbar'\r\n\r\n      },\r\n\r\n      {icon: tableIcons.ViewColumn,\r\n        tooltip: \"Query Validate\",\r\n        iconProps: { style: { fontSize: \"6px\", color: \"green\" } },\r\n          onClick: QueryChecker,\r\n          //,isFreeAction:true\r\n          position : 'toolbar'\r\n  \r\n        },\r\n      // icons={{Edit: () => <EditOutlinedIcon style={{ color: \"grey\" }}/>,\r\n\r\n      {icon:() => <AddCircleOutlineRoundedIcon style = {{color:\"black\"}}/>,\r\n        // icon: tableIcons.Add,\r\n        tooltip: \"Add Rows\",\r\n        //iconProps: { style: { fontSize: \"6px\", color: \"green\" } },\r\n        position : 'row',\r\n        //hidden : true,\r\n        //isFreeAction : true,\r\n        //onKeypress: console.log('haha'),\r\n          onClick: handleAddRows,\r\n          isLoading: true,\r\n      \r\n      \r\n        },\r\n\r\n        rowData =>(\r\n          {\r\n        icon:() => {\r\n        let color_type = 'black';\r\n        if (rowData.tableData.childRows != null)\r\n        {color_type = 'grey'}\r\n        return(\r\n        <CallSplitRoundedIcon\r\n         style = {{color:color_type,\r\n              background:'transparent'}}/>\r\n        )},\r\n\r\n\r\n\r\n        \r\n        \r\n                    \r\n          // icon: tableIcons.DetailPanel,\r\n          tooltip: \"Variation\",\r\n          position : 'row',\r\n          hidden : rowData.parentid != 'no',\r\n          //isFreeAction : true,\r\n          //onKeypress: console.log('haha'),\r\n          onClick: bu_specific,\r\n            //isLoading: true,\r\n            disabled : rowData.tableData.childRows != null\r\n          }),\r\n\r\n          // rowData_2 => ({\r\n          //   icon: \"Edit\",\r\n          //   tooltip: \"Edit row\",\r\n          //   onClick: (event, rowData) => {\r\n          //     rowData.tableData.editing = 'update'\r\n          //   }\r\n          // })\r\n\r\n\r\n          // rowData2 => ({\r\n          //   icon: \"Edit\",\r\n          //   tooltip: \"Edit row\",\r\n          //   onClick: (event, rowData) => {\r\n          //     rowData.tableData.onTreeExpandChange = true;\r\n          //     rowData.tableData.editing = 'update'\r\n          //     // rowData.tableData.isTreeExpanded = true\r\n          //     console.log(rowData)\r\n\r\n          //     alert(`\\r\\n***ROWDATA AFTER CLICKING EDIT***:\\r\\n\\r\\n${JSON.stringify(rowData, null, 2)}`);\r\n          //     forceUpdate();\r\n          //   }\r\n          // })\r\n        \r\n        // {icon: tableIcons.Edit,\r\n        //   tooltip: \"Edit\",\r\n        //   //isFreeAction : true,\r\n        //   //onKeypress: console.log('haha')\r\n        //     onClick: handleAddRows\r\n            \r\n        //    // , isFreeAction:true\r\n  \r\n          // }\r\n        \r\n        \r\n    ]}\r\n    // TODO working on rewriting the editfield component to add enter or delete function\r\n    components={{\r\n      Row: (props) => (\r\n        <MTableBodyRow\r\n          {...props}\r\n          //className={classes.tableRow}\r\n          draggable= \"true\"\r\n          onDoubleClick={e => {\r\n\r\n            if (props.data.Query.startsWith('@'))\r\n            {return }\r\n            else{\r\n            // console.log(props.data);\r\n            // console.log(e)\r\n            props.actions[5]().onClick(e,props.data);\r\n            //alert(\"Make row editable\");\r\n          }}\r\n        }\r\n          // onKeyUp={event => {\r\n          //   if (event.key === \"Enter\"){handleAddRows(1,props.data.tableData)}}}\r\n            \r\n          //onKeyPress={handleAddRows(1,props.data.tableData)}\r\n          onDragStart={(e) => {\r\n            //console.log(\"onDragStart\");\r\n            let row_table = [...data]\r\n            let range = [...Array(row_table.length).keys()];\r\n            let target_id = props.data.id\r\n            //let pass_index = ''\r\n            for (const[first , second] of zip(row_table , range))\r\n              if (first.id == target_id)\r\n              {DrageState.row = second ;\r\n              break}\r\n\r\n              //console.log(range)\r\n\r\n\r\n            //console.log(pass_index)\r\n            //DrageState.row = props.data.tableData.id;\r\n            //DrageState.row = pass_index;\r\n\r\n            //console.log(DrageState.row);\r\n\r\n          }}\r\n          onDragEnter={(e) => {\r\n            let row_table = [...data]\r\n            let range = [...Array(row_table.length).keys()];\r\n            let target_id = props.data.id\r\n            let pass_index = ''\r\n\r\n            for (const[first , second] of zip(row_table , range))\r\n              if (first.id == target_id)\r\n              {pass_index = second ;\r\n              break}\r\n              //console.log(pass_index)\r\n\r\n\r\n            //e.preventDefault();\r\n            //console.log(\"onDragEnter\");\r\n            if (pass_index !== DrageState.row) {\r\n              DrageState.dropIndex = pass_index;\r\n            }\r\n          }}\r\n\r\n          onDragEnd={(e) => {\r\n            //console.log(`onDragEnd`);\r\n            if (DrageState.dropIndex !== -1) {\r\n              reOrderRow(DrageState.row, DrageState.dropIndex);\r\n            }\r\n            //DrageState.row = -1;\r\n            //DrageState.dropIndex = -1;\r\n          }}\r\n\r\n        />\r\n        \r\n\r\n        \r\n      ),\r\n\r\n      // EditRow: props => {\r\n      //   return (\r\n      //     <MTableEditRow \r\n      //       {...props}\r\n      //       onEditingCanceled={(mode, rowData) => {\r\n      //         rowData.tableData.editing = undefined;\r\n      //         // rowData.tableData.isTreeExpanded = true;\r\n      //         forceUpdate();\r\n      //       }}\r\n      //       onEditingApproved={(mode, newData, oldData) => {\r\n      //         const dataCopy = [...data];\r\n      //         const index = dataCopy.indexOf(oldData);\r\n      //         dataCopy[index] = newData;\r\n      //         setData(dataCopy);\r\n      //       }}\r\n      //     />\r\n      //   );\r\n      // }\r\n    \r\n              // EditRow: props => <MTableEditRow {...props} className={classes.tableRow} />,\r\n\r\n      \r\n\r\n\r\n    // EditField: props => <MTableEditField {...props}  style= {{\r\n    //   boxShadow: \"none\",\r\n    //   boxSizing: \"none\",\r\n    //   padding: \"0px\",\r\n    // } }/>,\r\n\r\n      \r\n    }\r\n  }\r\n  />\r\n \r\n</div>\r\n\r\n  \r\n  \r\n\r\n  );\r\n};\r\n// reference: for icons\r\n//https://stackoverflow.com/questions/62339570/how-to-change-the-default-material-table-icons\r\n\r\nexport default BasicTable \r\n\r\n\r\n\r\n// https://github.com/mbrn/material-table/issues/1735","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\n// import './App.scss';\r\nimport BasicTable from './App'\r\n//import Highlighter from \"react-highlight-words\";\r\n\r\n\r\n//import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BasicTable />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}